file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/bzip2/bzip2-config.cmake.in"  "if (@PKG_NAME@_CONFIG_INCLUDED)\n\treturn()\nendif()\nset(@PKG_NAME@_CONFIG_INCLUDED TRUE)\n\nset(@PKG_NAME@_INCLUDE_DIRS @CMAKE_INSTALL_PREFIX@/include)\n\nforeach(lib @PKG_LIBRARIES@)\n\tset(onelib \"\${lib}-NOTFOUND\")\n\tfind_library(onelib \${lib}\n\t\tPATHS @CMAKE_INSTALL_PREFIX@/lib\n\t\tNO_DEFAULT_PATH\n\t\t)\n\tif(NOT onelib)\n\t\tmessage(FATAL_ERROR \"Library '\${lib}' in package @PKG_NAME@ is not installed properly\")\n\tendif()\n\tlist(APPEND @PKG_NAME@_LIBRARIES \${onelib})\nendforeach()\n\nforeach(dep @PKG_DEPENDS@)\n\tif(NOT \${dep}_FOUND)\n\t\tfind_package(\${dep})\n\tendif()\n\tlist(APPEND @PKG_NAME@_INCLUDE_DIRS \${\${dep}_INCLUDE_DIRS})\n\tlist(APPEND @PKG_NAME@_LIBRARIES \${\${dep}_LIBRARIES})\nendforeach()\n")
file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/bzip2/CMakeLists.txt"  "cmake_minimum_required(VERSION 2.8)\nproject(bzip2)\n\nif (NOT CMAKE_BUILD_TYPE)\n\tset(CMAKE_BUILD_TYPE Release)\nendif()\n\nif(MSVC OR MSVC90 OR MSVC10)\n\tset(MSVC ON)\nendif (MSVC OR MSVC90 OR MSVC10)\n\nfile(GLOB sources *.c)\nset(bzip2_STAT_SRCS\n\t\${sources}\n)\n\ninclude_directories(\n\t\${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n#add_definitions(-DBZ_NO_STDIO=1)\nadd_library(bz2 \${bzip2_STAT_SRCS})\n\ntarget_link_libraries(bz2)\nif(NOT LIBDIR)\n\tSET(LIBDIR lib)\nendif()\ninstall(TARGETS bz2\n\tDESTINATION \${LIBDIR})\n\ninstall(FILES bzlib.h\n\tDESTINATION include)\n\nset(PKG_NAME \${PROJECT_NAME})\nset(PKG_LIBRARIES bz2)\nset(cmake_conf_file \"\${CMAKE_CURRENT_SOURCE_DIR}/\${PROJECT_NAME}-config.cmake\")\nconfigure_file(\"\${cmake_conf_file}.in\" \"\${cmake_conf_file}\" @ONLY)\ninstall(FILES \${cmake_conf_file} DESTINATION share/\${PROJECT_NAME}/cmake/ COMPONENT cmake)\n\nif (NOT MSVC)\n\tset(PKG_DESC \"bzip2\")\n\tset(PKG_CB_LIBS \"-lbz2\")\n\tset(pkg_conf_file \"\${CMAKE_CURRENT_SOURCE_DIR}/bzip2.pc\")\n\tconfigure_file(\"\${pkg_conf_file}.in\" \"\${pkg_conf_file}\" @ONLY)\n\tinstall(FILES \${pkg_conf_file} DESTINATION lib/pkgconfig/ COMPONENT pkgconfig)\nendif()\n\n")
