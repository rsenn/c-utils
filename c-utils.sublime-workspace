{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cha",
				"chained_attributes"
			],
			[
				"cfg",
				"cfgdata"
			],
			[
				"Con",
				"ContactRef\tclass"
			],
			[
				"pre",
				"preprocess_command"
			],
			[
				"BUILD_TYPE",
				"BUILD_TYPE_RELWITHDEBINFO"
			],
			[
				"Parsigr",
				"ParsigramBalances"
			],
			[
				"require_",
				"require_parsigram"
			],
			[
				"capture_",
				"capture_api_errors"
			],
			[
				"acti",
				"activate_token"
			],
			[
				"encode",
				"encode_query_string"
			],
			[
				"getaddres",
				"getaddressesbylabel\tabc"
			],
			[
				"split",
				"split_string\tabc"
			],
			[
				"capture",
				"capture_api_errors\tabc"
			],
			[
				"Trans",
				"TransactionEndpoint\tabc"
			],
			[
				"capture_er",
				"capture_errors_json"
			],
			[
				"cap",
				"capture_errors_json"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "cvalue\ncsetting\ncword\nconfig_data_at\ndump_cword\ndump_csetting\ndump_cvalue\nparse_cfgvalue\nparse_cfgsetting\nparse_cfgword\nparse_cfgdata\nconfig_bytes\nget_setting_word\nget_setting_value\nfind_setting\nfind_value\ninfer_chip\nget_cfgdat\nadd_item\nprocess_config\noutput_items\nusage\nmain",
			"settings":
			{
				"buffer_size": 275,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			}
		},
		{
			"file": "genmakefile.c",
			"settings":
			{
				"buffer_size": 115279,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"lib/uint8.h\"\n#include \"lib/uint16.h\"\n#include \"lib/uint32.h\"\n#include \"lib/slist.h\"\n#include \"lib/mmap.h\"\n#include \"lib/alloc.h\"\n#include \"lib/byte.h\"\n#include \"lib/str.h\"\n#include \"lib/scan.h\"\n#include \"lib/ihex.h\"\n#include \"lib/stralloc.h\"\n#include \"lib/buffer.h\"\n#include \"lib/map.h\"\n#include \"lib/strlist.h\"\n#include \"lib/getopt.h\"\n#include \"lib/dir.h\"\n#include \"lib/path.h\"\n#include <assert.h>\n#include <ctype.h>\n\ntypedef struct cvalue {\n  struct cvalue* next;\n  uint16 value;\n  int is_default;\n  const char* name;\n  const char* description;\n} cvalue;\n\ntypedef struct csetting {\n  struct csetting* next;\n  uint16 mask;\n  const char* name;\n  const char* description;\n  struct cvalue* values;\n} csetting;\n\ntypedef struct cword {\n  struct cword* next;\n  uint32 address;\n  uint16 mask;\n  uint16 default_value;\n  const char* name;\n  csetting* settings;\n} cword;\n\nstatic cword* words;\nstatic ihex_file hex;\nstatic uint32 baseaddr;\nstatic stralloc cfg;\n// static map_t(const char*) pragmas;\nstatic strlist pragmas;\nstatic int nodefault = 1, oneline = 0, comments = 1, output_name = 0, verbose = 0;\n\nuint16\nconfig_data_at(uint32 addr) {\n  if(baseaddr == 0x0000400e) {\n    size_t offs = addr - 0x2007;\n    assert(offs < cfg.len);\n    return uint16_read(&cfg.s[offs]);\n  } else {\n    size_t offs = (addr & 0x0fff);\n    return cfg.s[offs];\n  }\n}\n\nvoid\ndump_cword(buffer* b, cword* word) {\n  buffer_puts(b, word->name ? word->name : \"(null)\");\n  buffer_puts(b, \" @ 0x\");\n  buffer_putxlong0(b, word->address, 4);\n  buffer_puts(b, \"\\tmask 0x\");\n  buffer_putxlong0(b, word->mask, 2);\n  buffer_puts(b, \"\\tdefault 0x\");\n  buffer_putxlong0(b, word->default_value, 2);\n  buffer_putnlflush(b);\n}\n\nvoid\ndump_csetting(buffer* b, csetting* setting) {\n  buffer_puts(b, \"  \");\n  buffer_puts(b, setting->name ? setting->name : \"(null)\");\n  buffer_puts(b, \"\\tmask 0x\");\n  buffer_putxlong0(b, setting->mask, 2);\n  buffer_puts(b, \"\\t\\t\");\n  buffer_puts(b, setting->description);\n  buffer_putnlflush(b);\n}\nvoid\ndump_cvalue(buffer* b, cvalue* value) {\n  buffer_puts(b, \"    \");\n  buffer_puts(b, value->name ? value->name : \"(null)\");\n  buffer_puts(b, \"\\tvalue 0x\");\n  buffer_putxlong0(b, value->value, 2);\n  buffer_puts(b, \"\\t\\t\");\n  buffer_puts(b, value->description);\n  buffer_putnlflush(b);\n}\n\ncvalue**\nparse_cfgvalue(cvalue** vptr, cword* w, csetting* s, const char* x, size_t n) {\n  cvalue* v = *vptr = alloc(sizeof(cvalue));\n  size_t i;\n  unsigned long value;\n  i = scan_xlongn(x, n, &value);\n  assert(i);\n  v->is_default = (w->default_value & s->mask) == value;\n  v->value = value;\n  x += i + 1;\n  n -= i + 1;\n  i = byte_chr(x, n, ':');\n  i = byte_chr(x, i, ',');\n  v->name = str_ndup(x, i);\n  assert(i < n);\n  x += i + 1;\n  n -= i + 1;\n  v->description = str_ndup(x, n);\n  v->next = NULL;\n  return &v->next;\n}\n\ncsetting**\nparse_cfgsetting(csetting** sptr, cword* w, const char* x, size_t n) {\n  csetting* s = *sptr = alloc(sizeof(csetting));\n  size_t i;\n  unsigned long value;\n  i = scan_xlongn(x, n, &value);\n  assert(i);\n  s->mask = value;\n  x += i + 1;\n  n -= i + 1;\n  i = byte_chr(x, n, ':');\n  s->name = str_ndup(x, i);\n  assert(i < n);\n  x += i + 1;\n  n -= i + 1;\n  s->description = str_ndup(x, n);\n  s->next = NULL;\n  s->values = NULL;\n  return &s->next;\n}\n\ncword**\nparse_cfgword(cword** wptr, const char* x, size_t n) {\n  cword* w = *wptr = alloc(sizeof(cword));\n  size_t i;\n  unsigned long value;\n  i = scan_xlongn(x, n, &value);\n  assert(i);\n  w->address = value;\n  x += i + 1;\n  n -= i + 1;\n  i = scan_xlongn(x, n, &value);\n  assert(i);\n  w->mask = value;\n  x += i + 1;\n  n -= i + 1;\n  i = scan_xlongn(x, n, &value);\n  assert(i);\n  w->default_value = value;\n  x += i + 1;\n  n -= i + 1;\n  w->name = str_ndup(x, n);\n  w->next = NULL;\n  w->settings = NULL;\n  return &w->next;\n}\n\nint\nparse_cfgdata(cword** wptr, const char* x, size_t n) {\n  size_t eol, col;\n  cword* w = 0;\n  csetting *s = 0, **sptr = NULL;\n  cvalue *v = 0, **vptr = NULL;\n\n  while(n > 0) {\n\n    eol = byte_chr(x, n, '\\n');\n\n    if(eol > 0 && x[0] == 'C') {\n      const char* line = x;\n      col = byte_chr(x, n, ':') + 1;\n      assert(col < eol);\n      x += col;\n      n -= col;\n      eol -= col;\n\n      if(!str_diffn(line, \"CWORD\", 5)) {\n        cword** nwptr = parse_cfgword(wptr, x, eol);\n        w = *wptr;\n        sptr = &w->settings;\n        wptr = nwptr;\n      } else if(!str_diffn(line, \"CSETTING\", 8)) {\n        csetting** nsptr = parse_cfgsetting(sptr, w, x, eol);\n        s = *sptr;\n        vptr = &s->values;\n        sptr = nsptr;\n      } else if(!str_diffn(line, \"CVALUE\", 6)) {\n        cvalue** nvptr = parse_cfgvalue(vptr, w, s, x, eol);\n        v = *vptr;\n        vptr = nvptr;\n      }\n    }\n\n    if(eol < n)\n      eol++;\n\n    x += eol;\n    n -= eol;\n  }\n  return 0;\n}\n\nsize_t\nconfig_bytes(ihex_file* ihf, stralloc* sa, uint32* addr) {\n  size_t bytes;\n  stralloc_zero(sa);\n  stralloc_ready(sa, 14);\n\n  if(((bytes = ihex_read_at(&hex, 0x00300000, sa->s, 14)) == 14)) {\n    *addr = 0x00300000;\n  } else {\n    if((bytes = ihex_read_at(&hex, 0x400e, sa->s, 2)) == 2)\n      *addr = 0x400e;\n  }\n\n  sa->len = bytes;\n  return bytes;\n}\n\nuint16\nget_setting_word(cword* word, csetting* setting) {\n  uint16 value = config_data_at(word->address);\n\n  value &= setting->mask;\n\n  return value;\n}\n\ncvalue*\nget_setting_value(cword* word, csetting* setting) {\n  cvalue* value;\n  uint16 byteval = get_setting_word(word, setting);\n/*\n  if(verbose) {\n    buffer_putm_internal(buffer_2, word->name, \": \", setting->name, \" = \", 0);\n    buffer_putxlong0(buffer_2, byteval, 2);\n    buffer_putnlflush(buffer_2);\n  }\n*/\n  slink_foreach(setting->values, value) {\n    if(verbose) {\n      buffer_putm_internal(buffer_2, \"  \", value->name, \": \", 0);\n      buffer_putxlong0(buffer_2, value->value, 2);\n      buffer_putnlflush(buffer_2);\n    }\n\n    if(value->value == byteval)\n      return value;\n  }\n\n  return NULL;\n}\n\ncsetting*\nfind_setting(const char* str) {\n  cword* word;\n  csetting* setting;\n  slink_foreach(words, word) {\n    slink_foreach(word->settings, setting) {\n      if(!str_diffn(str, setting->name, str_len(setting->name)))\n        return setting;\n    }\n  }\n  return NULL;\n}\n\ncvalue*\nfind_value(const char* str) {\n  csetting* setting = find_setting(str);\n  cvalue* value;\n  str += str_chr(str, '=');\n  while(*str == '=' || *str == ' ') ++str;\n  slink_foreach(setting->values, value) {\n    if(!str_diffn(str, value->name, str_len(value->name)))\n      return value;\n  }\n  return NULL;\n}\n\nconst char*\ninfer_chip(const char* x, size_t n) {\n  static stralloc chip;\n  size_t i;\n\n  for(i = 0; i + 3 < n; i++) {\n    size_t len = n - i;\n    const char* s = &x[i];\n\n    if(*s == '1') {\n      char c2 = tolower(s[2]);\n      if(c2 == 'l' || c2 == 'f') {\n        char c1 = s[1];\n        if(c1 == '2' || c1 == '6' || c1 == '8') {\n          len = scan_charsetnskip(s, \"0123456789aAbBcCeEfFgGhHiIjJkKlLmMnNpPrRtTvV\", len);\n\n          if(len > 3) {\n            stralloc_copyb(&chip, s, len);\n            stralloc_lower(&chip);\n            stralloc_nul(&chip);\n            return chip.s;\n          }\n        }\n      }\n    }\n  }\n  return 0;\n}\n\nconst char*\nget_cfgdat(const char* chip) {\n  size_t i;\n  static stralloc path;\n  if(path.len == 0) {\n    dir_t d;\n    const char *dir = 0, *subdir;\n    static const char* const search_dirs[] = {\"/opt/microchip\",\n                                              \"C:\\\\Program Files\\\\Microchip\",\n                                              \"C:\\\\Program Files (x86)\\\\Microchip\"};\n    for(i = 0; i < sizeof(search_dirs) / sizeof(search_dirs[0]); i++) {\n      dir = search_dirs[i];\n      if(path_exists(dir))\n        break;\n    }\n    if(dir == NULL)\n      return NULL;\n    stralloc_copys(&path, dir);\n    stralloc_cats(&path, \"/xc8/\");\n    stralloc_nul(&path);\n    dir_open(&d, path.s);\n    while((subdir = dir_read(&d))) {\n      if(subdir[0] == '.')\n        continue;\n      dir = subdir;\n      /*  buffer_putm_internal(buffer_2, \"subdir = \", subdir, 0);\n        buffer_putnlflush(buffer_2);*/\n    }\n    stralloc_cats(&path, dir);\n  }\n  path.len = stralloc_finds(&path, \"/dat/\");\n  stralloc_cats(&path, \"/dat/cfgdata/\");\n  stralloc_cats(&path, chip);\n  stralloc_cats(&path, \".cfgdata\");\n  stralloc_nul(&path);\n\n  if(path_exists(path.s)) {\n    buffer_putm_internal(buffer_2, \"Found cfgdata: \", path.s, 0);\n    buffer_putnlflush(buffer_2);\n    return path.s;\n  }\n  return 0;\n}\n\nvoid\nadd_item(strlist* list, const char* name, const char* value) {\n\n  stralloc out;\n  stralloc_init(&out);\n\n  if(value)\n    stralloc_catm_internal(&out, name, \" = \", value, 0);\n  else\n    stralloc_catm_internal(&out, \"// \", name, 0);\n\n  strlist_push_sa(list, &out);\n\n  stralloc_free(&out);\n}\n\nvoid\nprocess_config(void (*callback)(strlist*,const char* key, const char* value), strlist* list) {\n  cword *prevword = 0, *word;\n  csetting* setting;\n  cvalue* value;\n\n  slink_foreach(words, word) {\n    if(!str_diffn(word->name, \"IDLOC\", 5))\n      break;\n\n    if(verbose)\n      dump_cword(buffer_2, word);\n\n    slink_foreach(word->settings, setting) {\n\n      value = get_setting_value(word, setting);\n\n      if(value == NULL) {\n        buffer_puts(buffer_2, \"WARNING:  value \");\n        buffer_putxlong0(buffer_2, get_setting_word(word, setting), 2);\n        buffer_putm_internal(buffer_2, \" for setting \", setting->name, \" not found!\", 0);\n        buffer_putnlflush(buffer_2);\n        continue;\n      }\n\n      if(value->is_default && nodefault) {\n#ifdef DEBUG_OUTPUT\n        if(verbose > 1) {\n          buffer_putm_internal(buffer_2, \"skip default value \", value->name, \" for setting \", setting->name, 0);\n          buffer_putnlflush(buffer_2);\n        }\n#endif\n        continue;\n      }\n\n      if(output_name && prevword != word)\n        callback(list, word->name, NULL);\n\n      callback(list, setting->name, value->name);\n      prevword = word;\n    }\n  }\n}\n\nvoid\noutput_items(const strlist* items) {\n  const char* x;\n  int i, col = 0;\n  size_t n;\n\n  i = 0;\n  strlist_foreach(items, x, n) {\n    if(x[0] != '/') {\n      if(i)\n        buffer_puts(buffer_1, (oneline && col > 0) ? \", \" : \"\\n#pragma config \");\n      else\n        buffer_puts(buffer_1, \"#pragma config \");\n\n    } else if(i) {\n      col = -1;\n      buffer_puts(buffer_1, \"\\n\\n\");\n    }\n\n    if(comments && !oneline) {\n      csetting* setting = find_setting(x);\n      const char* description = setting ? setting->description : 0;\n      cvalue* value = find_value(x);\n      if(value)\n        description = value->description;\n      buffer_putspad(buffer_1, x, 20);\n      buffer_putm_internal(buffer_1, \" // \", description, 0);\n\n    } else\n\n      buffer_put(buffer_1, x, n);\n    ++i;\n    ++col;\n  }\n  buffer_putnlflush(buffer_1);\n}\n\n/**\n * @brief usage  Show command line usage\n * @param argv0\n */\nvoid\nusage(char* argv0) {\n  buffer_putm_internal(buffer_1,\n                       \"Usage: \",\n                       str_basename(argv0),\n                       \" <hex-file> <cfgdata-file>\\n\"\n                       \"\\n\"\n                       \"Options\\n\"\n                       \"  -h, --help                show this help\\n\"\n                       \"  -o, --oneline             output oneliner\\n\"\n                       \"  -D, --no-default          don't output settings with default value\\n\"\n                       \"  -C, --no-comments         don't output description comments\\n\"\n                       \"  -n, --name                output register name\\n\"\n                       \"  -v, --verbose             show verbose messages\\n\"\n                       \"\\n\",\n                       NULL);\n  buffer_putnlflush(buffer_1);\n}\n\nint\nmain(int argc, char* argv[]) {\n  const char* x;\n  size_t i, n;\n  int c, index = 0;\n  const char *cfgdata = 0, *hexfile = 0;\n\n  struct longopt opts[] = {{\"help\", 0, NULL, 'h'},\n                           {\"oneline\", 0, &oneline, 1},\n                           {\"default\", 0, &nodefault, 0},\n                           {\"no-comments\", 0, &comments, 0},\n                           {\"name\", 0, &output_name, 1},\n                           {\"verbose\", 0, &verbose, 1},\n                           {0, 0, 0, 0}};\n\n  for(;;) {\n    c = getopt_long(argc, argv, \"hodCnv\", opts, &index);\n    if(c == -1)\n      break;\n    if(c == 0)\n      continue;\n\n    switch(c) {\n      case 'h': usage(argv[0]); return 0;\n      case 'o': oneline = 1; break;\n      case 'd': nodefault = 0; break;\n      case 'C': comments = 0; break;\n      case 'n': output_name = 1; break;\n      case 'v': verbose++; break;\n      default:\n        buffer_puts(buffer_2, \"No such option '-\");\n        buffer_putc(buffer_2, c);\n        buffer_putsflush(buffer_2, \"'\\n\");\n\n        return 1;\n    }\n  }\n\n  if(optind < argc) {\n    hexfile = argv[optind++];\n\n    if(optind < argc)\n      cfgdata = argv[optind++];\n  }\n\n  if(!hexfile)\n    hexfile = \"/home/roman/Sources/pictest/bootloaders/usb-msd-bootloader-18f2550.hex\";\n\n  if(cfgdata) {\n    if(!path_exists(cfgdata))\n      cfgdata = get_cfgdat(cfgdata);\n  } else {\n    const char* chip = infer_chip(hexfile, str_len(hexfile));\n    if(chip)\n      cfgdata = get_cfgdat(chip);\n  }\n\n  x = mmap_read(cfgdata, &n);\n  assert(x);\n  assert(n);\n  parse_cfgdata(&words, x, n);\n  mmap_unmap(x, n);\n\n  x = mmap_read(hexfile, &n);\n  assert(x);\n  assert(n);\n  ihex_load_buf(&hex, x, n);\n  mmap_unmap(x, n);\n\n  stralloc_init(&cfg);\n  config_bytes(&hex, &cfg, &baseaddr);\n\n\n  strlist_init(&pragmas, '\\0');\n\n  process_config(&add_item, &pragmas);\n\n\n  if(verbose) {\n    cword* word;\n\n    slink_foreach(words, word) {\n      uint16 value = config_data_at(word->address);\n      buffer_puts(buffer_2, word->name);\n      buffer_puts(buffer_2, \" @ \");\n      buffer_putxlong0(buffer_2, word->address, 4);\n      buffer_puts(buffer_2, \": \");\n      buffer_putxlong0(buffer_2, value & word->mask, 4);\n      buffer_putnlflush(buffer_2);\n    }\n\n\n/*    for(i = 0; i < cfg.len; i += 2) {\n      uint16 v = uint16_read(&cfg.s[i]);\n\n      buffer_putxlong0(buffer_2, baseaddr + i, 4);\n      buffer_puts(buffer_2, \": \");\n      buffer_putxlong0(buffer_2, v, 4);\n      buffer_putnlflush(buffer_2);\n    }*/\n  }\n\n  output_items(&pragmas);\n\n  return 0;\n}\n",
			"file": "piccfg.c",
			"file_size": 14051,
			"file_write_time": 132255402389003485,
			"settings":
			{
				"buffer_size": 14051,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Outline: Toggle Sort"
			],
			[
				"index",
				"Indexing Status"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"ctags",
				"Build With: Rebuild CTags"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"schheme",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"TOKS",
				"Toks: Quick search for definitions of symbol under cursor"
			],
			[
				"cscope",
				"Cscope: Look up symbol"
			],
			[
				"utline",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"schemee",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"scheme",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"schemed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"gdb",
				"SublimeGDB: Stop Debugging"
			],
			[
				"instal pa",
				"Package Control: Install Package"
			],
			[
				"schemd",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instalp",
				"Package Control: Install Package"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"html",
				"HTMLPrettify"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"INST",
				"Package Control: Install Package"
			],
			[
				"REMOVE",
				"Package Control: Remove Package"
			],
			[
				"SCHEMED",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"SchemeEditor: Edit installed scheme"
			],
			[
				"color",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"install p$",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"DELETE",
				"Delete Blank Lines"
			],
			[
				"moon",
				"Browse Mode: Outline (Left)"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"moonscr",
				"Build With: Compile MoonScript"
			],
			[
				"moons",
				"Set Syntax: MoonScript"
			],
			[
				"repository",
				"Package Control: Remove Repository"
			],
			[
				"REPOS",
				"Package Control: Add Repository"
			]
		],
		"width": 736.0
	},
	"console":
	{
		"height": 265.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Dokumente/Sources/c-utils",
		"/home/roman/Dokumente/Sources/c-utils/lib",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray"
	],
	"file_history":
	[
		"/home/roman/Dokumente/Sources/c-utils/list-r.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_ends.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_endsb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/scan/scan_whitenskip.c",
		"/home/roman/Dokumente/Sources/c-utils/c-utils.sublime-project",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_set.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/array.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/array/array_reset.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_setb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_sort.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_free.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_prepends.c",
		"/home/roman/Dokumente/Sources/c-utils/examples/fmt_iso8691.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_iso8601.c",
		"/home/roman/.cache/.fr-lKqJcr/Ubuntu/Extras/Cursors/Install.inf",
		"/home/roman/.cache/.fr-JZaZo9/Clearlooks_Themes/Extras/Cursors/Install.inf",
		"/home/roman/.cache/.fr-We2ler/Ubuntu/Extras/Cursors/Install.inf",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/strarray_setn.c",
		"/home/roman/Dokumente/Sources/c-utils/genmakefile.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/dir/dir_type.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte/byte_fill.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/dir.h",
		"/home/roman/Dokumente/Sources/c-utils/genmakefile.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_8long.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte/byte_rchr.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/rdir/rdir_read.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist.h",
		"/home/roman/Dokumente/Sources/c-utils/crc.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/wait.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/sig.h",
		"/home/roman/Dokumente/Sources/pictest/build/mplabx-pic18/blinktest_18f2550_xc8.X/nbproject/configurations.xml",
		"/home/roman/Dokumente/Sources/c-utils/xmltest3.c",
		"/home/roman/Dokumente/Sources/skalibs/src/include/skalibs/sig.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/json.h",
		"/home/roman/Dokumente/Sources/c-utils/xmltest.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_print.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_newnode.c",
		"/home/roman/Dokumente/Sources/c-utils/CMakeLists.txt",
		"/home/roman/.config/sublime-text-3/Packages/RainbowBrackets/README.md",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/Werror.cmake",
		"/home/roman/Dokumente/Sources/skalibs/lib/sig.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_read_callback.c",
		"/home/roman/Dokumente/Sources/lc-meter/build/mplabx-pic18f/LC_meter_18f2550_xc8.X/nbproject/configurations.xml",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_attributes.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_read_tree.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/alloc.h",
		"/home/roman/Dokumente/Sources/lc-meter/nbproject/configurations.xml",
		"/home/roman/Dokumente/Sources/c-utils/lib/hmap/hmap_dump.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_read_tree.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hmap.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_child_element_text.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_set_attribute.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_child_element_attrs.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_set_attribute_double.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer.h",
		"/home/roman/Dokumente/Sources/c-utils/node_modules/iconv-lite/encodings/tables/cp936.json",
		"/home/roman/Dokumente/Sources/c-utils/xmltest2.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_element_attrs.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_putm_internal.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_element.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/scan.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_attrnode.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/scan/scan_nonwhitenskip.3",
		"/home/roman/Dokumente/Sources/c-utils/lib/errmsg/errmsg_infosys.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_child_element.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_add_child.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_textnode.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_textnodeb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_reader_init.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_trimr.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_get_text.c",
		"/home/roman/Dokumente/Sources/lc-meter/build/mplabx-pic18f/LC_meter_18f2550_xc8.X/test.txt",
		"/home/roman/Dokumente/Sources/lc-meter/build/mplabx-pic18f/LC_meter_18f2550_xc8.X/xmlnode",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_get_attribute.c",
		"/home/roman/Dokumente/Sources/pictest/blinktest.c",
		"/home/roman/Dokumente/Sources/c-utils/mplab.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_remove_all.c",
		"/home/roman/Dokumente/Sources/c-utils/tests/test_stralloc.c",
		"/home/roman/Dokumente/Sources/c-utils/xml2json.c",
		"/home/roman/Dokumente/Sources/c-utils/map.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_decamelize.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/str.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/xml/xml_print_attributes.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_camelize.c",
		"/home/roman/Dokumente/Sources/c-utils/build/occ32/MinSizeRel/xml_print_attributes.cbr",
		"/home/roman/Dokumente/Sources/lc-meter/gen-mk-mplab.sh",
		"/home/roman/Dokumente/Sources/pictest/gen-mk-mplab.sh",
		"/home/roman/Dokumente/Sources/pictest/gen-mk.sh",
		"/home/roman/Dokumente/Sources/lc-meter/gen-mk.sh",
		"/home/roman/Dokumente/Sources/pictest/lib/device.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte.h",
		"/home/roman/Dokumente/Sources/pictest/lib/ser.c",
		"/home/roman/Dokumente/Sources/c-utils/3rdparty/zlib/inflate.c",
		"/home/roman/Dokumente/Sources/c-utils/3rdparty/zlib/inflate.h",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest-18f2550-debug-htc.mcp",
		"/home/roman/Dokumente/Sources/c-utils/ini.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/path.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_indexofb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_pushb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_push_unique.c",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest_htc.mcp",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_pusb_unique.c",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/htc-18f2550-debug.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/pictest_sdcc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest_16f876a_htc.mcp",
		"/home/roman/Dokumente/Sources/c-utils/ini.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt.h",
		"/home/roman/Dokumente/Sources/c-utils/mplab.h",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest-18f2550-debug-xc8.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/serialtest_htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/ringtone_htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/ps2test_htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/pictest_htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/pictest_xc8.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest_18f2550_xc8.mcp",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_truncfile.c",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/pictest2_htc.mcp",
		"/home/roman/Dokumente/Sources/pictest/build/mplab/blinktest_18f2550_htc.mcp",
		"/home/roman/Dokumente/Sources/lc-meter/build/mplab/LC-meter-HD44780-16f876a-xc8.mcp",
		"/home/roman/Dokumente/Sources/c-utils/lib/path/path_relative.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/path/path_basename.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/path/path_dirname.c",
		"/home/roman/Dokumente/Sources/c-utils/piccfg.c",
		"/home/roman/Dokumente/Sources/c-utils/eagle-to-svg.js"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 258.0,
		"where_history":
		[
			"/home/roman/Dokumente/Sources/c-utils,*.c,*.h,*.js",
			"/home/roman/Dokumente/Sources/pictest/lib,*.c,*.h,*.js",
			"/home/roman/Dokumente/Sources/pictest,*.c,*.h,*.js",
			"/home/roman/Dokumente/Sources/c-utils,*.c,*.h,*.js,",
			"/home/roman/Dokumente/Sources/c-utils,*.c,*.h,*.js/home/roman/Dokumente/Sources/c-utils,*.c,*.h,",
			"/home/roman/Dokumente/Sources/c-utils,*.c,*.h-2.79/20.47460.",
			"/home/roman/Dokumente/Sources/c-utils,*.c,*.h",
			"/home/roman/Dokumente/Sources/c-utils,*.c",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"skip defa",
			"config_bytes",
			"baseaddr",
			"BASEADDR",
			"config_data_at",
			"get_setting_value",
			"config_data_at",
			"config_word",
			"get_config_word",
			"words",
			"slink_foreach",
			"config_bytes",
			"words",
			"config_data_at",
			"config_bytes",
			"get_setting_value",
			"config_data_at",
			"get_setting_value",
			"get_setting_word",
			"config_data_at",
			"dump_cword",
			"process_config",
			"add_item",
			"pragmas",
			"output_items",
			"process_config",
			"get_setting_word",
			"config_data_at",
			"xc8\"",
			"hex",
			"intel",
			"has main",
			"_ends",
			"exts.bin",
			"_ends",
			"ends",
			"isupper",
			"scan_whitenskip",
			"skip_comment",
			"scan_main",
			"rset",
			"_free",
			"array_free",
			"mode_flags",
			"make_str",
			"resolve_etc",
			"make_num",
			"size =",
			"read_etc",
			"resolve_etc",
			"read_etc",
			"read_users",
			"etc_users",
			"read_users",
			"make_num",
			"0o",
			"mode_flags",
			"8long",
			"mode_str",
			"make_num",
			"mask \\|",
			"mask |",
			"stralloc_nul",
			"opt_types",
			"dtype",
			"MAX_PATH",
			"type_mask",
			"type_ma",
			"show\\)",
			"opt_types",
			"getopt",
			"lstat",
			"^make_num",
			"make_num",
			"nlink =",
			"make_num",
			"exclude",
			"exclude_",
			"exclude",
			"dtype",
			"dir_type",
			"DT_",
			"DT_FILE",
			"exts.bin",
			".exe\"",
			"'B'",
			"exeext",
			"binext",
			"output_name",
			"stralloc_replace",
			"replace",
			"toolchain =",
			"toolchain",
			"mingw",
			"\"gcc\"",
			"\"gcc",
			"ws2_32",
			"outfile",
			"pathsep_make",
			"make\"",
			"set_compiler_type",
			"set_make_type",
			"pathsep_args =",
			"pathsep_args",
			"$(CPPFLAGS) $(DEFS) $(DEFS)",
			"$(CPPFLAGS)",
			"-D_DEBUG",
			"\"_DEBUG",
			"_DEBUG",
			"\"_DEBUG",
			"_DEBUG",
			"push_define",
			"'D'",
			"-D",
			"\"DEFS\"",
			" $(DEFS)",
			"$(DEFS)",
			"$(LDFLAGS) $(EXTRA_LDFLAGS) $(EXTRA_LDFLAGS)",
			"$(LDFLAGS)",
			"$(CFLAGS) $(EXTRA_CFLAGS) $(EXTRA_CFLAGS)",
			"$(CFLAGS $(EXTRA_CFLAGS) $(EXTRA_CFLAGS)",
			"$(CFLAGS)",
			"\\$\\(CFLAGS\\) ",
			"(CFLAGS) ",
			"_replace",
			"stralloc_find",
			"_replace",
			"all"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"mode_flags",
			"bit ",
			"$(CPPFLAGS) $(DEFS)",
			"$(LDFLAGS) $(EXTRA_LDFLAGS)",
			"$(CFLAGS) $(EXTRA_CFLAGS)",
			"rule_",
			"rule_add",
			"out->",
			"_SIG_H",
			"\\1//debug_sa",
			"#",
			");",
			"map",
			"compiler",
			"..\\..",
			"set_str(toolcfg",
			"ini_set_long(section, \"\\1\", \\2);",
			" = ",
			"out",
			"\"builddir\"",
			"",
			"make_tool_key(&sa, ",
			"preprocess",
			"_make",
			"make_",
			"make_tool_key(\\&sa, 1, \"\\1\")",
			"set_value(toolcfg, \"\\1\", \\2);",
			"",
			"tgt.",
			"_MAP_H",
			"get_setting_word",
			"get_setting_data",
			"config_data_at",
			"nodefault",
			" Util.formatA",
			"0.50",
			"0.5",
			"",
			"line",
			"lname",
			"",
			"1.27",
			"\\n  static",
			"\\n  constructor",
			"\\1 = -1;",
			"\\1 = 0;",
			"\\nclass",
			"const char* x",
			"to-svg",
			"$@",
			"srcfile",
			"uint16",
			"uint32",
			"",
			"\"",
			"MAP_DELETE(",
			"MAP_GET",
			"",
			"buffer_2",
			"pkgname->",
			"pkgname",
			"output_net",
			"MAP_NEW(\\1)",
			"&output",
			"output",
			"buffer_2",
			"buffer_1->",
			"ppsrc",
			"path_output",
			"'",
			"parse",
			"MACH"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 275,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Dokumente/Sources/c-utils/piccfg.c",
							"outline_alphabetical": false,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									559,
									565
								],
								[
									708,
									716
								],
								[
									865,
									870
								],
								[
									1114,
									1128
								],
								[
									1356,
									1366
								],
								[
									1697,
									1710
								],
								[
									1996,
									2007
								],
								[
									2290,
									2304
								],
								[
									2814,
									2830
								],
								[
									3265,
									3278
								],
								[
									3783,
									3796
								],
								[
									4760,
									4772
								],
								[
									5118,
									5134
								],
								[
									5272,
									5289
								],
								[
									5879,
									5891
								],
								[
									6148,
									6158
								],
								[
									6462,
									6472
								],
								[
									7101,
									7111
								],
								[
									8363,
									8371
								],
								[
									8657,
									8671
								],
								[
									9819,
									9831
								],
								[
									10716,
									10721
								],
								[
									11541,
									11545
								]
							],
							"symlist":
							[
								"cvalue",
								"csetting",
								"cword",
								"config_data_at",
								"dump_cword",
								"dump_csetting",
								"dump_cvalue",
								"parse_cfgvalue",
								"parse_cfgsetting",
								"parse_cfgword",
								"parse_cfgdata",
								"config_bytes",
								"get_setting_word",
								"get_setting_value",
								"find_setting",
								"find_value",
								"infer_chip",
								"get_cfgdat",
								"add_item",
								"process_config",
								"output_items",
								"usage",
								"main"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "genmakefile.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 115279,
						"regions":
						{
						},
						"selection":
						[
							[
								90963,
								90963
							]
						],
						"settings":
						{
							"color_scheme": "Packages/Rainglow/rainglow/Darkside (rainglow).tmTheme",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 65076.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "piccfg.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14051,
						"regions":
						{
						},
						"selection":
						[
							[
								12211,
								12211
							]
						],
						"settings":
						{
							"color_scheme": "Packages/JavaScriptNext - ES6 Syntax/Next.tmTheme",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5507.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 79.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 194.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 319.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.loghighlight":
	{
		"height": 186.0
	},
	"output.unsaved_changes":
	{
		"height": 96.0
	},
	"pinned_build_system": "Rebuild CTags",
	"project": "c-utils.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"piccf",
				"piccfg.c"
			],
			[
				"ends.c",
				"lib/stralloc/stralloc_ends.c"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"scan_whi",
				"lib/scan/scan_whitenskip.c"
			],
			[
				"genma",
				"genmakefile.c"
			],
			[
				"reset.c",
				"lib/array/array_reset.c"
			],
			[
				"setb.c",
				"lib/strarray/strarray_setb.c"
			],
			[
				"array.h",
				"lib/array.h"
			],
			[
				"strarray_set",
				"lib/strarray/strarray_set.c"
			],
			[
				"strarray.h",
				"lib/strarray.h"
			],
			[
				"fmt_iso",
				"lib/fmt/fmt_iso8601.c"
			],
			[
				"byte_fill.c",
				"lib/byte/byte_fill.c"
			],
			[
				"8long.c",
				"lib/fmt/fmt_8long.c"
			],
			[
				"list-r.c",
				"list-r.c"
			],
			[
				"dir.h",
				"lib/dir.h"
			],
			[
				"genmake",
				"genmakefile.h"
			],
			[
				"byte_rchr",
				"lib/byte/byte_rchr.c"
			],
			[
				"genmakefile.h",
				"genmakefile.h"
			],
			[
				"wait.h",
				"lib/wait.h"
			],
			[
				"strlist",
				"lib/strlist.h"
			],
			[
				"crc.c",
				"crc.c"
			],
			[
				"list-r",
				"list-r.c"
			],
			[
				"xmltest.c",
				"xmltest.c"
			],
			[
				"xmltest3",
				"xmltest3.c"
			],
			[
				"sig.h",
				"lib/sig.h"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"cmakel",
				"CMakeLists.txt"
			],
			[
				"strall",
				"lib/stralloc.h"
			],
			[
				"",
				"xmltest3.c"
			],
			[
				"xml_at",
				"lib/xml/xml_attributes.c"
			],
			[
				"test3",
				"xmltest3.c"
			],
			[
				"xml_print.c",
				"lib/xml/xml_print.c"
			],
			[
				"alloc.h",
				"lib/alloc.h"
			],
			[
				"READ_",
				"lib/xml/xml_read_callback.c"
			],
			[
				"XML_READ",
				"lib/xml/xml_read_callback.c"
			],
			[
				"read_tree",
				"lib/xml/xml_read_tree.c"
			],
			[
				"tree.c",
				"lib/xml/xml_read_tree.c"
			],
			[
				"read_ca",
				"lib/xml/xml_read_callback.c"
			],
			[
				"_tree.c",
				"lib/xml/xml_read_tree.c"
			],
			[
				"hmap.",
				"lib/hmap.h"
			],
			[
				"newnod",
				"lib/xml/xml_newnode.c"
			],
			[
				"dump.c",
				"lib/hmap/hmap_dump.c"
			],
			[
				"hmap.h",
				"lib/hmap.h"
			],
			[
				"xml_pr",
				"lib/xml/xml_print.c"
			],
			[
				"xml.h",
				"lib/xml.h"
			],
			[
				"xml_new",
				"lib/xml/xml_newnode.c"
			],
			[
				"test3.c",
				"xmltest3.c"
			],
			[
				"xml_attr",
				"lib/xml/xml_attributes.c"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"mltest3",
				"xmltest3.c"
			],
			[
				"93",
				"node_modules/iconv-lite/encodings/tables/cp936.json"
			],
			[
				"nt_attr",
				"lib/xml/xml_element_attrs.c"
			],
			[
				"scan.h",
				"lib/scan.h"
			],
			[
				"scann.h",
				"lib/scan/scan_nonwhitenskip.3"
			],
			[
				"xmltest",
				"xmltest3.c"
			],
			[
				"set_attr",
				"lib/xml/xml_set_attribute.c"
			],
			[
				"hmap",
				"lib/hmap.h"
			],
			[
				"attributes",
				"~/Dokumente/Sources/c-utils/lib/xml/xml_attributes.c"
			],
			[
				"xml_child",
				"lib/xml/xml_child_element.c"
			],
			[
				"xml_add",
				"lib/xml/xml_add_child.c"
			],
			[
				"xml_ee",
				"lib/xml/xml_element.c"
			],
			[
				"xml.",
				"lib/xml.h"
			],
			[
				"xml_get",
				"lib/xml/xml_get_text.c"
			],
			[
				"xml_get_te",
				"lib/xml/xml_get_text.c"
			],
			[
				"strlist.h",
				"lib/strlist.h"
			],
			[
				"map.h",
				"map.h"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"deca",
				"lib/stralloc/stralloc_decamelize.c"
			],
			[
				"camel",
				"lib/stralloc/stralloc_camelize.c"
			],
			[
				"xml_",
				"build/occ32/MinSizeRel/xml_print_attributes.cbr"
			],
			[
				"mplab.c",
				"mplab.c"
			],
			[
				"mplab",
				"mplab.c"
			],
			[
				"genmakefile.c",
				"genmakefile.c"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"inflate.h",
				"3rdparty/zlib/inflate.h"
			],
			[
				"inflate.c",
				"3rdparty/zlib/inflate.c"
			],
			[
				"strlist_index",
				"lib/strlist/strlist_indexofb.c"
			],
			[
				"push_unique",
				"lib/strlist/strlist_push_unique.c"
			],
			[
				"strlist_pushb",
				"lib/strlist/strlist_pushb.c"
			],
			[
				"genmak",
				"genmakefile.c"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"ini.c",
				"ini.c"
			],
			[
				"fmt.h",
				"lib/fmt.h"
			],
			[
				"ini.h",
				"ini.h"
			],
			[
				"ini",
				"ini.c"
			],
			[
				"mplab.h",
				"mplab.h"
			],
			[
				"buffer_trunc",
				"lib/buffer/buffer_truncfile.c"
			],
			[
				"strarray_sort",
				"lib/strarray/strarray_sort.c"
			],
			[
				"strarra",
				"lib/strarray.h"
			],
			[
				"strarray",
				"lib/strarray.h"
			],
			[
				"path_re",
				"lib/path/path_relative.c"
			],
			[
				"path_dir",
				"lib/path/path_dirname.c"
			],
			[
				"path_base",
				"lib/path/path_basename.c"
			],
			[
				"hmap_add",
				"lib/hmap/hmap_add.c"
			],
			[
				"hmap_set",
				"lib/hmap/hmap_set_stralloc.c"
			],
			[
				"hmap_set_c",
				"lib/hmap/hmap_set_chars.c"
			],
			[
				".mcp",
				"~/Dokumente/Sources/pictest/build/mplab/pictest_xc8.mcp"
			],
			[
				"stralloc.",
				"lib/stralloc/stralloc_0.c"
			],
			[
				"path_relat",
				"lib/path/path_relative.c"
			],
			[
				"mpla",
				"mplab.c"
			],
			[
				"init.c",
				"lib/buffer/buffer_init.c"
			],
			[
				"GNU",
				"GNUmakefile"
			],
			[
				"gnu",
				"GNUmakefile"
			],
			[
				"eagle-to",
				"eagle-to-svg.c"
			],
			[
				"eagle-to-svg",
				"eagle-to-svg.c"
			],
			[
				"ihex",
				"lib/ihex.h"
			],
			[
				"picc",
				"piccfg.c"
			],
			[
				"eagle-ini",
				"eagle-init-brd.c"
			],
			[
				"eagle-t",
				"eagle-to-svg.js"
			],
			[
				"util.js",
				"utils/util.js"
			],
			[
				"to-sv",
				"eagle-to-svg.js"
			],
			[
				"out.svg",
				"out.svg"
			],
			[
				"dom.es",
				"utils/dom.es5.js"
			],
			[
				"util.es",
				"utils/util.es5.js"
			],
			[
				"hu.js",
				"utils/hu.js"
			],
			[
				"out.sv",
				"out.svg"
			],
			[
				"sava",
				"utils/savage.js"
			],
			[
				"hu.j",
				"utils/hu.js"
			],
			[
				"util",
				"utils/util.es5.js"
			],
			[
				"to-svg",
				"eagle-to-svg.js"
			],
			[
				"eagle.js",
				"utils/eagle.js"
			],
			[
				"xml2json",
				"xml2json.c"
			],
			[
				"dom.js",
				"utils/dom.js"
			],
			[
				"ihex.h",
				"lib/ihex.h"
			],
			[
				"cofflist.c",
				"cofflist.c"
			],
			[
				"gen-cmd",
				"eagle-gen-cmds.c"
			],
			[
				"eagle-",
				"eagle-to-circuit.c"
			],
			[
				"eaggle-",
				"eagle-gen-cmds.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 290.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
