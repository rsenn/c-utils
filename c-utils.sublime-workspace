{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"default",
				"default_printer\tabc"
			],
			[
				"ext",
				"ext\tabc"
			],
			[
				"if",
				"if"
			],
			[
				"redefi",
				"redefinition\tabc"
			],
			[
				"b",
				"buffer\tabc"
			],
			[
				"ssltest_",
				"ssltest_process_message"
			],
			[
				"BRO",
				"BROTLI_DECODER_RESULT_ERROR"
			],
			[
				"IP",
				"IPV6_V6ONLY"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  ‚ìÇ‚ÄÇ‚ÄÉ__BSD_VISIBLE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object\n  ‚ìÇ‚ÄÇ‚ÄÉ_WINSOCKAPI_‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object\n  ‚ìÇ‚ÄÇ‚ÄÉFIONBIO‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object\n  ‚ìÇ‚ÄÇ‚ÄÉO_NONBLOCK‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object\n‚Äî‚íª‚Äì‚ÄÉio_nonblock‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction",
			"settings":
			{
				"buffer_size": 170,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			}
		},
		{
			"contents": "#include \"../uint64.h\"\n#include \"../buffer.h\"\n#include \"../json.h\"\n#include \"../slist.h\"\n#include \"../stralloc.h\"\n#include \"../fmt.h\"\n#include <assert.h>\n\nstruct indent_write {\n  buffer_op_proto* realop;\n  size_t level;\n  const char* indent;\n};\n\nstatic void\nbuffer_indent_set(buffer* b, const char* in) {\n  struct indent_write* iw = (struct indent_write*)b->cookie;\n  iw->indent = in;\n}\n\nstatic ssize_t\nbuffer_indent_write(fd_t fd, char* x, size_t n, void* ptr) {\n  buffer* b = (buffer*)ptr;\n  struct indent_write* iw = (struct indent_write*)b->cookie;\n\n  ssize_t ret;\n  while(n > 0) {\n\n    ret = iw->realop(fd, x, 1, ptr);\n\n    if(*x == '\\n') {\n      size_t i;\n      for(i = 0; i < iw->level; i++) {\n        ret = iw->realop(fd, (void*)iw->indent, str_len(iw->indent), ptr);\n        if(ret < 0)\n          return ret;\n      }\n    }\n    x++;\n    n--;\n  }\n  return ret;\n}\n\nstatic void\nbuffer_indent(buffer* b, struct indent_write* iw) {\n  iw->realop = b->op;\n  iw->indent = \"  \";\n  iw->level = 0;\n  b->op = (buffer_op_proto*)&buffer_indent_write;\n  b->cookie = iw;\n}\n\nstatic void\ndepth_fn(const jsonval* v, int* arg, int depth) {\n  if(*arg < depth)\n    *arg = depth;\n}\n\nstatic int\nget_depth(const jsonval* v) {\n  int depth = -1;\n  json_recurse((jsonval*)v, depth_fn, &depth);\n  return depth;\n}\n\nstatic void\njson_default_printer(jsonfmt* p, jsonval* v, int depth, int index, char quote) {\n  int pretty = v && get_depth(v) > 1;\n  static char q[2] = {'\"', '\\0'};\n  p->indent = pretty ? \" \" : \"\";\n  p->newline = pretty ? \"\\n\" : \"\";\n  p->spacing = pretty ? \" \" : \"\";\n  p->separat = pretty ? \", \" : \",\";\n  p->quote[0] = quote;\n  p->quote[1] = quote;\n  p->precision = 10;\n  p->depth = depth;\n  p->index = index;\n  p->compliant = 1;\n};\n\nstatic void json_print_val(jsonval* val, buffer* b, int depth, json_print_fn*);\n\nstatic int\nbyte_fullfils_predicate(const char* x, size_t len, int (*pred)(int)) {\n  size_t i;\n\n  for(i = 0; i < len; ++i) {\n    if(!pred(x[i]))\n      return 0;\n  }\n  return !!i;\n}\n\nstatic void\njson_print_separator(jsonval* val,\n                     buffer* b,\n                     int what,\n                     const jsonfmt* printer) {\n  const char* s;\n\n  s = printer->ws[what];\n  buffer_puts(b, s);\n\n  if(s[str_chr(s, '\\n')])\n    buffer_putns(b, printer->indent, printer->depth);\n}\n\nstatic void\njson_print_key(buffer* b, const char* key, size_t key_len, const jsonfmt* fmt) {\n  char quote;\n  quote = ((!isdigit(key[0]) &&\n            byte_fullfils_predicate(key, key_len, json_is_identifier_char)))\n              ? fmt->quote[1]\n              : fmt->quote[0];\n  if(fmt->compliant) {\n    if(quote != '\"')\n      quote = '\"';\n  }\n  if(quote)\n    buffer_putc(b, quote);\n  buffer_put(b, key, key_len);\n  if(quote)\n    buffer_putc(b, quote);\n}\n\nstatic void\njson_print_str(buffer* b, const char* x, size_t len, const jsonfmt* fmt) {\n  char tmp[6];\n  char quote = fmt->quote[0];\n  if(quote)\n    buffer_putc(b, quote);\n  while(len--) {\n    assert(*x);\n    if(*x == quote || (*x == '\\\\' && !(len > 0 && x[1] == 'u')))\n      buffer_put(b, tmp, fmt_escapecharjson(tmp, *x, quote));\n    else\n      buffer_PUTC(b, *x);\n    ++x;\n  }\n  if(quote)\n    buffer_putc(b, quote);\n}\n\nstatic void\njson_print_object(jsonval* val, buffer* b, int depth, json_print_fn* p) {\n  MAP_PAIR_T pair;\n  int index = 0;\n  jsonfmt printer;\n  p(&printer, val, depth + 1, index, 0);\n  if(MAP_ISNULL(val->dictv)) {\n    buffer_puts(b, \"null\");\n    return;\n  }\n  buffer_puts(b, \"{\");\n  p(&printer, val, depth + 1, index, 0);\n\n  if(!MAP_ISNULL(val->dictv)) {\n    MAP_FOREACH(val->dictv, pair) {\n      if(index == 0)\n        json_print_separator(val, b, JSON_FMT_NEWLINE, &printer);\n      else\n        json_print_separator(MAP_VALUE(pair), b, JSON_FMT_SEPARATOR, &printer);\n      ++index;\n      p(&printer, 0, depth + 1, index, 0);\n      json_print_key(b, MAP_KEY(pair), MAP_KEY_LEN(pair), &printer);\n      buffer_puts(b, \":\");\n      json_print_separator(MAP_VALUE(pair), b, JSON_FMT_SPACING, &printer);\n      json_print_val(MAP_VALUE(pair), b, depth + 1, p);\n    }\n    p(&printer, val, depth + 1, -2, 0);\n    json_print_separator  (val, b, JSON_FMT_NEWLINE, &printer);\n  }\n  buffer_puts(b, \"}\");\n}\n\nstatic void\njson_print_array(jsonval* val, buffer* b, int depth, json_print_fn* p) {\n  jsonfmt printer;\n  union {\n    slink* ptr;\n    void* iter;\n  } it;\n  int index = 0;\n\n  buffer_puts(b, \"[\");\n\n  if(val->listv == NULL) {\n    buffer_puts(b, \"]\");\n    return;\n  }\n  // buffer_puts(b, printer.spacing);\n  //\n  p(&printer, val, depth + 1, index, 0);\n  json_print_separator(val, b, JSON_FMT_NEWLINE, &printer);\n\n  slink_foreach(val->listv, it.iter) {\n    p(&printer, val, depth + 1, index, 0);\n    if(index > 0)\n      json_print_separator(val, b, JSON_FMT_SEPARATOR, &printer);\n\n    json_print_val(slist_data(it.ptr), b, depth + 1, p);\n    ++index;\n    // if(!!slist_next(it.ptr)) json_print_separator(val, b, JSON_FMT_SEPARATOR,\n    // &printer);\n  }\n  p(&printer, val, depth + 1, -2, 0);\n\n  json_print_separator(val, b, JSON_FMT_NEWLINE, &printer);\n  buffer_puts(b, \"]\");\n}\n\nstatic void\njson_print_val(jsonval* val, buffer* b, int depth, json_print_fn* p) {\n  jsonfmt printer;\n  p(&printer, val, depth, 0, 0);\n\n  /*if(depth > 0)\n    buffer_puts(b, printer.spacing);*/\n  //    json_print_separator(val, b, depth, -1, p);\n\n  switch(val->type) {\n    case JSON_UNDEFINED: break;\n    case JSON_STRING:\n      json_print_str(b, val->stringv.s, val->stringv.len, &printer);\n      break;\n    case JSON_DOUBLE:\n      buffer_putdouble(b, val->doublev, printer.precision);\n      break;\n    case JSON_BOOL: buffer_puts(b, val->boolv ? \"true\" : \"false\"); break;\n    case JSON_INT: buffer_putlonglong(b, val->intv); break;\n    case JSON_OBJECT: json_print_object(val, b, depth, p); break;\n    case JSON_ARRAY: json_print_array(val, b, depth, p); break;\n  }\n}\n\nvoid\njson_print(jsonval val, buffer* b, json_print_fn* p) {\n  jsonfmt printer;\n  if(p == NULL)\n    p = &json_default_printer;\n  p(&printer, &val, 0, -1, '\"');\n  json_print_val(&val, b, 0, p);\n  buffer_puts(b, printer.newline);\n  buffer_flush(b);\n}\n",
			"file": "lib/json/json_print.c",
			"file_size": 6055,
			"file_write_time": 132566285374913286,
			"settings":
			{
				"buffer_size": 6057,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hmap/hmap_add.c",
			"settings":
			{
				"buffer_size": 2311,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hmap/hmap_search.c",
			"settings":
			{
				"buffer_size": 1048,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/json.h",
			"settings":
			{
				"buffer_size": 4136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hashmap/hashmap_find.c",
			"settings":
			{
				"buffer_size": 219,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/io/io_nonblock.c",
			"settings":
			{
				"buffer_size": 866,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hashmap/hashmap_put.c",
			"settings":
			{
				"buffer_size": 942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hashmap/linked_list_head.c",
			"settings":
			{
				"buffer_size": 136,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hashmap/linked_list_size.c",
			"settings":
			{
				"buffer_size": 119,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hashmap/hashmap_init.c",
			"settings":
			{
				"buffer_size": 1268,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_skip.c",
			"settings":
			{
				"buffer_size": 995,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_peek.c",
			"settings":
			{
				"buffer_size": 774,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_peekc.c",
			"settings":
			{
				"buffer_size": 739,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_get.c",
			"settings":
			{
				"buffer_size": 824,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_close.c",
			"settings":
			{
				"buffer_size": 188,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_skip_until.c",
			"settings":
			{
				"buffer_size": 255,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/charbuf/charbuf_skip_pred.c",
			"settings":
			{
				"buffer_size": 272,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Advanced Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"doxy",
				"DoxyDoxygen: Build Documentation"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"svgo",
				"SVGO: Prettify SVG"
			],
			[
				"ctag",
				"CTags: Rebuild Tags"
			],
			[
				"rebuild",
				"CTags: Rebuild Tags"
			],
			[
				"ctags",
				"CTags: Rebuild Tags"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"tags",
				"CTags: Rebuild Tags"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 295.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Dokumente/Sources/c-utils",
		"/home/roman/Dokumente/Sources/c-utils/lib",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap",
		"/home/roman/Dokumente/Sources/c-utils/lib/io",
		"/home/roman/Dokumente/Sources/c-utils/lib/json"
	],
	"file_history":
	[
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_put.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_parse.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/charbuf.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_init.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/map.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/cbmap/cbmap_alloc.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/cbmap/cbmap_get.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_free.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_append.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_recurse.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/linked_list.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_free.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_get.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_size.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_prepend.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_init.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_size.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/charbuf/charbuf_peek.c",
		"/home/roman/Dokumente/Sources/c-utils/CMakeLists.txt",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_append.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_0.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/stralloc_subst.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/linked_list_head.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_print.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_free.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hmap/hmap_add.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_search.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_remove.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_newnode.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/cpp/cpp_undef_macro.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_default_hash_func.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_default_comparator.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hashmap/hashmap_find.c",
		"/home/roman/Dokumente/Sources/c-utils/jsontest.c",
		"/home/roman/Dokumente/Sources/c-utils/jsonpp.c",
		"/home/roman/Dokumente/Sources/c-utils/genmakefile.h",
		"/home/roman/Dokumente/Sources/c-utils/genmakefile.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_set_property.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_tosa.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_toint.c",
		"/home/roman/Dokumente/Sources/c-utils/build/x86_64-linux-gnu/lib/Makefile",
		"/home/roman/Dokumente/Sources/c-utils/ini.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/cpp/cpp_free.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hmap.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/cpp.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/cpp_internal.h",
		"/home/roman/Dokumente/Sources/c-utils/eagle-to-svg.js",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/CMakeLists.txt",
		"/home/roman/Dokumente/Sources/c-utils/tinyproxy.c",
		"/home/roman/Dokumente/Sources/c-utils/ini.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/tai.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/taia.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/taia/taia_frac.c",
		"/home/roman/Dokumente/Sources/c-utils/build/x86_64-linux-clang/Makefile",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_read_tree.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte/byte_diff.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte/byte_count.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/hmap/hmap_get.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_length.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/json/json_get_property.c",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/BuildSSL.cmake",
		"/home/roman/Dokumente/Sources/c-utils/list-r.c",
		"/home/roman/Sources/c-utils/lib/json/json_print.c",
		"/home/roman/Sources/c-utils/lib/json/json_recurse.c",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/BuildBZip2.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/CheckOpenSSL.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/BuildZlib.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/CheckZlib.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/CheckBZip2.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/BuildLZMA.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/BuildOpenSSL.cmake",
		"/home/roman/Dokumente/Sources/c-utils/dump.c",
		"/home/roman/Dokumente/Sources/daemontools/src/timestamp.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/taia/taia_now.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_tai.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_ulonglong.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_human.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_humank.c",
		"/home/roman/Dokumente/Sources/c-utils/node_modules/@svgdotjs/svg.js/svg.js.d.ts",
		"/home/roman/Dokumente/Sources/c-utils/lib/str.h",
		"/home/roman/Dokumente/Sources/c-utils/dump.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/str/str_chrs.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/byte.h",
		"/home/roman/Dokumente/Sources/c-utils/debug.h",
		"/home/roman/Dokumente/Sources/c-utils/build/functions.mk",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/Functions.cmake",
		"/home/roman/Dokumente/Sources/c-utils/build/cmake/dump.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/dir.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/path.h",
		"/home/roman/Dokumente/Sources/c-utils/3rdparty/zlib/zconf.h",
		"/home/roman/Sources/plot-cv/zlib.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_deflate.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_fromb.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strlist/strlist_count.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray/buffer_putstra.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/strarray.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_put8long.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/fmt/fmt_ulong0.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_putlong0.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/array.h",
		"/home/roman/Dokumente/Sources/c-utils/lib/array/array_bytes.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/buffer/buffer_lzma.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/stralloc/buffer_getnewline_sa.c",
		"/home/roman/Sources/c-utils/lib/json.h",
		"/home/roman/Sources/c-utils/lib/dns/dns_random.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_transmit.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_resolve.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_domain.c",
		"/home/roman/Sources/c-utils/lib/env/env_get.c",
		"/home/roman/Sources/c-utils/lib/strarray/buffer_putstra.c",
		"/home/roman/Sources/c-utils/tinyproxy.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_name.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_packet.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_dtda.c",
		"/home/roman/Sources/c-utils/lib/dns/dns_ip4.c",
		"/home/roman/Sources/c-utils/pkgcfg.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/charbuf/charbuf_skip.c",
		"/home/roman/Dokumente/Sources/c-utils/lib/charbuf/charbuf_get.c",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/stitching_detailed.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/essential_mat_reconstr.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/cout_mat.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/mask_tmpl.cpp",
		"/home/roman/Dokumente/Sources/opencv/samples/cpp/create_mask.cpp"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
			"/home/roman/Sources/c-utils,*.txt,*.cmake,*CMakeLists*,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils,*.txt,*.cmake,*CMakeLists*,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt,*.cmake,*CMakeLists*,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils/lib/cpp,*.c,*.h,*.txt,*.cmake,*CMakeLists*,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt,*.cmake,*CMakeLists*,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*,-*/build/*",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt,/home/roman/Sources/c-utils,*.c,*.h,-*/3rdparty/*",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt,/home/roman/Sources/c-utils,*.c,*.h",
			"/home/roman/Sources/c-utils/lib,*.c,*.h,*.txt",
			"/home/roman/Sources/c-utils/lib,*.c,*.h",
			"/home/roman/Sources/c-utils,*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"CHARBUF",
			"MAP_SET",
			"MAP_ADD",
			"dup_flag",
			"MAP_ADD",
			"hashkeydup",
			"MAP_INIT",
			"MAP_INSERT",
			"MAP_VALUE",
			"getpair",
			"get_de",
			"pair",
			"print",
			"NULL",
			"get",
			"getpair",
			"MAP_DATA",
			"remove",
			"getpair",
			"ini.c",
			"ini",
			"init",
			"MAP",
			"cpptest",
			"MAP_KEY",
			"MAP_DATA",
			"MAP_KEY",
			"MAP",
			"write_fd",
			"out_fd",
			"library",
			"target_link",
			"json",
			"jsonpp",
			"jsonp",
			"== 0",
			"buffer",
			"NULL",
			"$",
			"NULL",
			"buffer",
			"stralloc",
			"buffer.h",
			"HMAP_DB",
			"stralloc",
			"hmap_",
			"hmap",
			"hmap_",
			"pretty",
			"json_recurse",
			"json_recurse_val",
			"recurse_val",
			"recurse",
			"buffer_put",
			"Configur",
			"httptest",
			"Configuring",
			"Configuringh",
			"TLS_LIBRAR",
			"httptest",
			"586",
			"make_time",
			"out-",
			"make_time",
			"make_nu",
			"fmt_hum",
			"opt_",
			"opt_crc",
			"make_num",
			"^list_file",
			"opt_human",
			"opt_c",
			"file = path",
			"file =",
			"str_diffn",
			"match_ex",
			"add_",
			"add",
			"\"web",
			"diffn",
			"\"web",
			"str_diffn",
			"byte_eq",
			"byte_diff",
			"tsx",
			"json",
			"match_ext",
			"path\"",
			"basename",
			"match\"",
			"extensions",
			"dump.*extensions",
			"extensions",
			"extensions\"",
			"extens",
			"add_ext_",
			"add_ext",
			"\"add\"",
			"str_diff",
			"str_equal",
			"path.s;",
			"path.s:",
			"match_ext",
			"match_pat",
			"\"script",
			"add_",
			"debug_",
			"newline",
			"dump√º-bytes",
			"add_ext",
			"addex",
			";k",
			"add_ext",
			"invert",
			"match_",
			"add_ext",
			"\"image",
			"extensions",
			"'c'",
			"'!'",
			"byte_eq",
			"0ns",
			"match_ext",
			"extensions",
			"'e'",
			"trunc",
			"list_file",
			"getopt"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"dump_ulong",
			"mode",
			"st->",
			"\\\\n\", \"",
			"",
			"\\1",
			"void*, void*, void*, void*",
			": \"",
			"\",",
			"\"TT_",
			"buffer_puts(buffer_2, \"",
			"XML_H",
			"",
			"{CMAKE_CURRENT_SOURCE_DIR}/build/",
			"buffer_puts(",
			"str_has",
			"countof",
			"free((void*)u->",
			"r->",
			"\\1#message(\"",
			"\\1message(STATUS \"Build",
			"\\1#message(\"",
			"\\1#dump(",
			"#",
			"\"linux/aio_abi.h\"",
			"str =",
			"static inline",
			"\\\\\\\\\\\\\\\\n",
			"${CMAKE_CURRENT_SOURCE_DIR}/",
			"#",
			"case_equals",
			"client->state",
			"client->control_sock",
			"\\1#\\2",
			"\\nint main() {",
			"\\nint main() { ",
			"if(debugmode) {\\1}",
			"idx2ifn",
			"ifn2idx",
			"set_iterator_t",
			"end",
			"isleap",
			"&sa->s",
			"#",
			"http_ssl2errno(h,",
			" errno =",
			"ret =",
			"SSL_get_error(h->ssl, ",
			"SSL_get_error(h->ssl",
			"v.",
			"num_prereqs",
			"buffer_putsflush(buffer_2,  debug_nl);",
			";\\n#endif",
			"#endif",
			"out.",
			"sa",
			"b->",
			"C",
			"uint32",
			"C",
			"to C",
			"C++",
			"n",
			"x",
			"resp->len",
			"og_string(\"udp\");",
			"",
			"errstr()",
			"111, FATAL, \"",
			"",
			"data->",
			"diesys(111, fatal,",
			"die(111, fatal,",
			"die(111, ",
			"diesys(111, ",
			"code",
			"ustar",
			"\\1addr.ip",
			"size_t",
			"",
			"->data.elem_size",
			"dns_cache",
			"sb->",
			"sockbuf_fmt_addr",
			"data_numlines",
			"sock",
			"DEBUG_OUTPUT_",
			" \\\\",
			"iarray",
			"c->proxy.",
			"c->client.",
			"INET",
			"plog",
			"term_buf.fd",
			" ",
			"uint16",
			" ",
			"_1, \", "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 170,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/home/roman/Dokumente/Sources/c-utils/lib/io/io_nonblock.c",
							"function_name_status_row": -1,
							"outline_rename_mode": false,
							"sorttabs_lastactivated": 1611847516.67,
							"symkeys":
							[
								[
									124,
									137
								],
								[
									148,
									160
								],
								[
									185,
									192
								],
								[
									347,
									357
								],
								[
									380,
									391
								]
							],
							"symlist":
							[
								"\t‚ìÇ‚ÄÇ‚ÄÉ__BSD_VISIBLE‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
								"\t‚ìÇ‚ÄÇ‚ÄÉ_WINSOCKAPI_‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
								"\t‚ìÇ‚ÄÇ‚ÄÉFIONBIO‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
								"\t‚ìÇ‚ÄÇ‚ÄÉO_NONBLOCK‚ÄÉ‚Ä¶‚ÄÉ‚Äî‚ÄÉmacro object",
								"‚Äî‚íª‚Äì‚ÄÉio_nonblock‚Äâ(‚Äâ)‚ÄÉ{‚Äâ‚Ä¶‚Äâ}‚ÄÉ‚Äî‚ÄÉfunction"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				}
			]
		},
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "lib/json/json_print.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6057,
						"regions":
						{
						},
						"selection":
						[
							[
								4071,
								4071
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2017.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/hmap/hmap_add.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2311,
						"regions":
						{
						},
						"selection":
						[
							[
								504,
								504
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/hmap/hmap_search.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1048,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/json.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4136,
						"regions":
						{
						},
						"selection":
						[
							[
								263,
								263
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/hashmap/hashmap_find.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 219,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "lib/io/io_nonblock.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 866,
						"regions":
						{
							"col_8004667E":
							{
								"flags": 16,
								"regions":
								[
									[
										193,
										203
									]
								],
								"scope": "col_8004667E"
							}
						},
						"selection":
						[
							[
								658,
								658
							]
						],
						"settings":
						{
							"function_name_status_row": -1,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/hashmap/hashmap_put.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 942,
						"regions":
						{
						},
						"selection":
						[
							[
								759,
								759
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/hashmap/linked_list_head.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 136,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/hashmap/linked_list_size.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 119,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/hashmap/hashmap_init.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1268,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/charbuf/charbuf_skip.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 995,
						"regions":
						{
						},
						"selection":
						[
							[
								417,
								417
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lib/charbuf/charbuf_peek.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 774,
						"regions":
						{
						},
						"selection":
						[
							[
								349,
								349
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "lib/charbuf/charbuf_peekc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 739,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "lib/charbuf/charbuf_get.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 824,
						"regions":
						{
						},
						"selection":
						[
							[
								325,
								325
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "lib/charbuf/charbuf_close.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "lib/charbuf/charbuf_skip_until.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 255,
						"regions":
						{
						},
						"selection":
						[
							[
								88,
								88
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "lib/charbuf/charbuf_skip_pred.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 272,
						"regions":
						{
						},
						"selection":
						[
							[
								97,
								97
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 145.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Rebuild CTags",
	"project": "c-utils.sublime-project",
	"replace":
	{
		"height": 69.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"json.h",
				"lib/json.h"
			],
			[
				"stralloc.h",
				"lib/stralloc.h"
			],
			[
				"charbuf",
				"lib/charbuf.h"
			],
			[
				"map.h",
				"lib/map.h"
			],
			[
				"linked",
				"lib/linked_list.h"
			],
			[
				"hashmap.h",
				"lib/hashmap.h"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"charbuf_peek",
				"lib/charbuf/charbuf_peek.c"
			],
			[
				"json_prin",
				"lib/json/json_print.c"
			],
			[
				"hashmap",
				"lib/hashmap.h"
			],
			[
				"put.c",
				"lib/hashmap/hashmap_put.c"
			],
			[
				"json_print",
				"lib/json/json_print.c"
			],
			[
				"json_parse",
				"lib/json/json_parse.c"
			],
			[
				"linked_li",
				"lib/linked_list.h"
			],
			[
				"json_pa",
				"lib/json/json_parse.c"
			],
			[
				"undef_ma",
				"lib/cpp/cpp_undef_macro.c"
			],
			[
				"jsonpp",
				"jsonpp.c"
			],
			[
				"jsontest",
				"jsontest.c"
			],
			[
				"genma",
				"genmakefile.c"
			],
			[
				"genmake",
				"genmakefile.c"
			],
			[
				"set_prop",
				"lib/json/json_set_property.c"
			],
			[
				"undef_macr",
				"lib/cpp/cpp_undef_macro.c"
			],
			[
				"parse.c",
				"lib/json/json_parse.c"
			],
			[
				"json_free",
				"lib/json/json_free.c"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"ini.h",
				"ini.h"
			],
			[
				"ini.c",
				"ini.c"
			],
			[
				"tinypro",
				"tinyproxy.c"
			],
			[
				"undef_mac",
				"lib/cpp/cpp_undef_macro.c"
			],
			[
				"cpp_free",
				"lib/cpp/cpp_free.c"
			],
			[
				"hmap.h",
				"lib/hmap.h"
			],
			[
				"cp_internal.h",
				"lib/cpp_internal.h"
			],
			[
				"cpp.h",
				"lib/cpp.h"
			],
			[
				"buffer.h",
				"lib/buffer.h"
			],
			[
				"tai.h",
				"lib/tai.h"
			],
			[
				"taia.h",
				"lib/taia.h"
			],
			[
				"lib/CMa",
				"lib/CMakeLists.txt"
			],
			[
				"jsonpp.c ",
				"jsonpp.c"
			],
			[
				"read_tree",
				"lib/json/json_read_tree.c"
			],
			[
				"recurse",
				"lib/json/json_recurse.c"
			],
			[
				"buildopen",
				"build/cmake/BuildOpenSSL.cmake"
			],
			[
				"buildssl",
				"build/cmake/BuildSSL.cmake"
			],
			[
				"",
				"lib/fmt/fmt_tai.c"
			],
			[
				"list-r",
				"list-r.c"
			],
			[
				"list-r.c",
				"list-r.c"
			],
			[
				"fmt_tai",
				"lib/fmt/fmt_tai.c"
			],
			[
				"fmt_ulonglong",
				"lib/fmt/fmt_ulonglong.c"
			],
			[
				"str.h",
				"lib/str.h"
			],
			[
				"dump.c",
				"dump.c"
			],
			[
				"dump.h",
				"dump.h"
			],
			[
				"str_chrs",
				"lib/str/str_chrs.c"
			],
			[
				"byte.h",
				"lib/byte.h"
			],
			[
				"debug.h",
				"debug.h"
			],
			[
				"functions.cmake",
				"build/cmake/Functions.cmake"
			],
			[
				"function",
				"build/functions.mk"
			],
			[
				"dir.h",
				"lib/dir.h"
			],
			[
				"strlist",
				"lib/strlist.h"
			],
			[
				"path.h",
				"lib/path.h"
			],
			[
				"strarray.h",
				"lib/strarray.h"
			],
			[
				"array.h",
				"lib/array.h"
			],
			[
				"buffer_getnew",
				"lib/stralloc/buffer_getnewline_sa.c"
			],
			[
				"env_get",
				"lib/env/env_get.c"
			],
			[
				"pkgc",
				"pkgcfg.c"
			],
			[
				"Func",
				"build/cmake/Functions.cmake"
			],
			[
				"lib/CM",
				"lib/CMakeLists.txt"
			],
			[
				"charbuf.h",
				"lib/charbuf.h"
			],
			[
				"buffer_putnl",
				"lib/buffer/buffer_putnlflush.c"
			],
			[
				"cpp_inter",
				"lib/cpp_internal.h"
			],
			[
				"fmt.h",
				"lib/fmt.h"
			],
			[
				"tokenizer",
				"lib/tokenizer.h"
			],
			[
				"put_esca",
				"lib/buffer/buffer_put_escaped.c"
			],
			[
				"tokenizertest",
				"tokenizertest.c"
			],
			[
				"cpp_add",
				"lib/cpp/cpp_add_define.c"
			],
			[
				"tokenizer.h",
				"lib/tokenizer.h"
			],
			[
				"putulong0",
				"lib/buffer/buffer_putulong0.c"
			],
			[
				"tokenizertes",
				"tokenizertest.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"tokeni",
				"lib/tokenizer.h"
			],
			[
				"parse_file",
				"lib/cpp/cpp_parse_file.c"
			],
			[
				"cpptest",
				"cpptest.c"
			],
			[
				"cpp_in",
				"lib/cpp_internal.h"
			],
			[
				"tokenizer_in",
				"lib/tokenizer_internal.h"
			],
			[
				"lib/cma",
				"lib/CMakeLists.txt"
			],
			[
				"seek.h",
				"lib/seek.h"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"socket.h",
				"lib/socket.h"
			],
			[
				"cbmap.h",
				"lib/cbmap.h"
			],
			[
				"cbmap",
				"lib/cbmap.h"
			],
			[
				"cb.h",
				"lib/cb.h"
			],
			[
				"alloc.h",
				"lib/alloc.h"
			],
			[
				"encas",
				"scripts/encapsulate-header.sh"
			],
			[
				"xml.h",
				"lib/xml.h"
			],
			[
				"rewind",
				"lib/buffer/buffer_rewind.c"
			],
			[
				"quote.c",
				"quote.c"
			],
			[
				"bmap.h",
				"lib/bmap.h"
			],
			[
				"sig.h",
				"lib/sig.h"
			],
			[
				"strlist.h",
				"lib/strlist.h"
			],
			[
				"preproc",
				"lib/preproc.h"
			],
			[
				"preproc.h",
				"lib/preproc.h"
			],
			[
				"get-proto",
				"scripts/get-prototypes.sh"
			],
			[
				"utf8.h",
				"lib/utf8.h"
			],
			[
				"README",
				"README.txt"
			],
			[
				"BuildOpen",
				"build/cmake/BuildOpenSSL.cmake"
			],
			[
				"buildSS",
				"build/cmake/BuildSSL.cmake"
			],
			[
				"bmap_de",
				"lib/bmap/bmap_deinit.c"
			],
			[
				"bmap_in",
				"lib/bmap_internal.h"
			],
			[
				"httppr",
				"httpproxy.c"
			],
			[
				"get-pro",
				"scripts/get-prototypes.sh"
			],
			[
				"lib/CMA",
				"lib/CMakeLists.txt"
			],
			[
				"list.h",
				"lib/list.h"
			],
			[
				"buffer_close",
				"lib/buffer/buffer_close.c"
			],
			[
				"prep",
				"lib/preproc.h"
			],
			[
				"prepr",
				"lib/preproc/preproc.c"
			],
			[
				"hmaph.",
				"lib/hmap.h"
			],
			[
				"internal.h",
				"lib/tokenizer_internal.h"
			],
			[
				"tokenizer_nex",
				"lib/tokenizer/tokenizer_next.c"
			],
			[
				"preproc.c",
				"lib/preproc/preproc.c"
			],
			[
				"proc.c",
				"lib/preproc/preproc.c"
			],
			[
				"preproc.",
				"lib/preproc.h"
			],
			[
				"http_sock",
				"lib/http/http_socket.c"
			],
			[
				"http_read_hea",
				"lib/http/http_read_header.c"
			],
			[
				"byte_low",
				"lib/byte/byte_lower.c"
			],
			[
				"getc.c",
				"~/Sources/c-utils/lib/tokenizer/tokenizer_getc.c"
			],
			[
				"tokenizer_internal",
				"lib/tokenizer_internal.h"
			],
			[
				"http.h",
				"lib/http.h"
			],
			[
				"cmakelist",
				"CMakeLists.txt"
			],
			[
				"slist.h",
				"lib/slist.h"
			],
			[
				"uri.c",
				"uri.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
