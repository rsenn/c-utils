{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"range",
				"range"
			],
			[
				"USE_",
				"USE_HD44780_LCD"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "TESTS\nTESTS\nTESTS\nSTART",
			"settings":
			{
				"buffer_size": 23,
				"line_ending": "Windows",
				"name": "𝌆 Outline",
				"scratch": true
			}
		},
		{
			"file": "httptest.c",
			"settings":
			{
				"buffer_size": 2859,
				"line_ending": "Unix"
			}
		},
		{
			"file": "genmakefile.c",
			"settings":
			{
				"buffer_size": 56593,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"unit_test.h\"\n#include \"../lib/buffer.h\"\n#include \"../lib/strlist.h\"\n\n/*\n * size_t strlist_count(const strlist* sl);\n */\nTEST(test_strlist_count) {\n  size_t n;\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"2\");\n  strlist_push(&sl, \"3\");\n  strlist_push(&sl, \"4\");\n\n  n = strlist_count(&sl);\n  ASSERT_EQ(4, n);\n}\n\n/*\n * char* strlist_at(const strlist* sl, size_t i);\n */\nTEST(test_strlist_at) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"2\");\n  strlist_push(&sl, \"3\");\n  strlist_push(&sl, \"4\");\n\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 0), \"1\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 1), \"2\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 2), \"3\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 3), \"4\"));\n}\n\n/*\n * char* strlist_at_n(const strlist* sl, size_t i, size_t* n);\n */\nTEST(test_strlist_at_n) {\n  const char* s;\n  size_t n;\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"12\");\n  strlist_push(&sl, \"123\");\n  strlist_push(&sl, \"1234\");\n\n  s = strlist_at_n(&sl, 0, &n);\n  ASSERT_EQ(n, 1);\n  ASSERT_EQ(0, !str_equal(s, \"1\"));\n\n  s = strlist_at_n(&sl, 1, &n);\n  ASSERT_EQ(n, 2);\n  ASSERT_EQ(0, !str_equal(s, \"12\"));\n\n  s = strlist_at_n(&sl, 2, &n);\n  ASSERT_EQ(n, 3);\n  ASSERT_EQ(0, !str_equal(s, \"123\"));\n\n  s = strlist_at_n(&sl, 3, &n);\n  ASSERT_EQ(n, 4);\n  ASSERT_EQ(0, !str_equal(s, \"1234\"));\n}\n\n/*\n * stralloc strlist_at_sa(const strlist* sl, size_t i);\n */\nTEST(test_strlist_at_sa) {\n  stralloc sa;\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"12\");\n  strlist_push(&sl, \"123\");\n  strlist_push(&sl, \"1234\");\n\n  sa = strlist_at_sa(&sl, 0);\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"1\"));\n  sa = strlist_at_sa(&sl, 1);\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"12\"));\n  sa = strlist_at_sa(&sl, 2);\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"123\"));\n  sa = strlist_at_sa(&sl, 3);\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"1234\"));\n}\n\n/*\n * int strlist_cat(strlist* sl, const strlist* l);\n */\nTEST(test_strlist_cat) {\n  stralloc sa;\n  strlist sl1, sl2;\n  stralloc_init(&sa);\n\n  strlist_init(&sl1, ',');\n  strlist_init(&sl2, '\\0');\n\n  strlist_push(&sl1, \"blah\");\n  strlist_push(&sl1, \"l33t\");\n\n  strlist_push(&sl2, \"1234\");\n  strlist_push(&sl2, \"8192\");\n\n  strlist_cat(&sl1, &sl2);\n\n  buffer_putsa(buffer_1, &sl1.sa);\n  buffer_putnlflush(buffer_1);\n\n  ASSERT_EQ(0, str_diffn(strlist_at(&sl1, 2), \"1234\", 4));\n  strlist_join(&sl1, &sa, '|');\n\n  buffer_putsa(buffer_1, &sa);\n  buffer_putnlflush(buffer_1);\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"blah|l33t|1234|8192\"));\n\n  ASSERT_EQ(4, strlist_count(&sl1));\n}\n\n/*\n * int strlist_contains(strlist* sl, const char* s);\n */\nTEST(test_strlist_contains) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"12\");\n  strlist_push(&sl, \"123\");\n  strlist_push(&sl, \"1234\");\n\n  ASSERT_EQ(0, !strlist_contains(&sl, \"12\"));\n  ASSERT_EQ(0, strlist_contains(&sl, \"4321\"));\n  ASSERT_EQ(0, strlist_contains(&sl, \"43210\"));\n}\n\n/*\n * int strlist_contains_sa(strlist* sl, const stralloc* sa);\n */\nTEST(test_strlist_contains_sa) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"1\");\n  strlist_push(&sl, \"12\");\n  strlist_push(&sl, \"123\");\n  strlist_push(&sl, \"1234\");\n\n  stralloc_copys(&sa, \"12\");\n  ASSERT_EQ(0, !strlist_contains_sa(&sl, &sa));\n  stralloc_copys(&sa, \"4321\");\n  ASSERT_EQ(0, strlist_contains_sa(&sl, &sa));\n  stralloc_copys(&sa, \"12340\");\n  ASSERT_EQ(0, strlist_contains_sa(&sl, &sa));\n}\n\n/*\n * void strlist_dump(buffer* out, const strlist* sl);\n */\nTEST(test_strlist_dump) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n}\n\n/*\n * void strlist_froms(strlist* sl, const char* s, char delim);\n */\nTEST(test_strlist_froms) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_froms(&sl, \"blah|l33t|1234|8192\", '|');\n\n  ASSERT_EQ(4, strlist_count(&sl));\n\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 0), \"blah\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 1), \"l33t\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 2), \"1234\"));\n  ASSERT_EQ(0, !str_equal(strlist_at(&sl, 3), \"8192\"));\n}\n\n/*\n * int64 strlist_index_of(strlist* sl, const char* str);\n */\nTEST(test_strlist_index_of) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n  strlist_froms(&sl, \"blah|l33t|1234|8192\", '|');\n\n  ASSERT_EQ(15, strlist_index_of(&sl, \"8192\"));\n  ASSERT_EQ(10, strlist_index_of(&sl, \"1234\"));\n  ASSERT_EQ(5, strlist_index_of(&sl, \"l33t\"));\n  ASSERT_EQ(0, strlist_index_of(&sl, \"blah\"));\n}\n\n/*\n * void strlist_join(const strlist* sl, stralloc* sa, char delim);\n */\nTEST(test_strlist_join) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"water\");\n  strlist_push(&sl, \"soil\");\n  strlist_push(&sl, \"air\");\n  strlist_push(&sl, \"fire\");\n\n  strlist_join(&sl, &sa, ',');\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"water,soil,air,fire\"));\n}\n\n/*\n * void strlist_joins(const strlist* sl, stralloc* sa, const char* delim);\n */\nTEST(test_strlist_joins) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n\n  strlist_init(&sl, '\\0');\n  strlist_push(&sl, \"water\");\n  strlist_push(&sl, \"soil\");\n  strlist_push(&sl, \"air\");\n  strlist_push(&sl, \"fire\");\n\n  strlist_joins(&sl, &sa, \"; \");\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"water; soil; air; fire\"));\n}\n\n/*\n * int strlist_push(strlist* sl, const char* s);\n */\nTEST(test_strlist_push) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n\n  ASSERT_EQ(0, strlist_count(&sl));\n  strlist_push(&sl, \"water\");\n  ASSERT_EQ(1, strlist_count(&sl));\n  strlist_push(&sl, \"soil\");\n  ASSERT_EQ(2, strlist_count(&sl));\n  strlist_push(&sl, \"air\");\n  ASSERT_EQ(3, strlist_count(&sl));\n  strlist_push(&sl, \"fire\");\n  ASSERT_EQ(4, strlist_count(&sl));\n}\n\n/*\n * int strlist_push_sa(strlist* sl, const stralloc* sa);\n */\nTEST(test_strlist_push_sa) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n\n  strlist_init(&sl, '|');\n\n  stralloc_copys(&sa, \"stralloc\");\n  strlist_push_sa(&sl, &sa);\n  strlist_push_sa(&sl, &sa);\n\n  ASSERT_EQ(0, !stralloc_equals(&sl.sa, \"stralloc|stralloc\"));\n}\n\n/*\n * void strlist_push_tokens(strlist* sl, const char* s, const char* delim);\n */\nTEST(test_strlist_push_tokens) {\n  const char* s;\n  strlist sl;\n  strlist_init(&sl, '\\0');\n\n  strlist_push_tokens(&sl, \"blah, l33t, 1234, 8192\", \", \");\n\n\n  s = strlist_at(&sl, 3);\n  ASSERT_EQ(0, !str_equal(s, \"8192\"));\n\n  s = strlist_at(&sl, 2);\n  ASSERT_EQ(0, !str_equal(s, \"1234\"));\n}\n\n/*\n * int strlist_push_unique(strlist* sl, const char* s);\n */\nTEST(test_strlist_push_unique) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n\n  ASSERT_EQ(0, strlist_count(&sl));\n  strlist_push_unique(&sl, \"strlist\");\n  ASSERT_EQ(1, strlist_count(&sl));\n  strlist_push_unique(&sl, \"stralloc\");\n  ASSERT_EQ(2, strlist_count(&sl));\n  strlist_push_unique(&sl, \"stralloc\");\n  ASSERT_EQ(2, strlist_count(&sl));\n  strlist_push_unique(&sl, \"str\");\n  ASSERT_EQ(3, strlist_count(&sl));\n  strlist_push_unique(&sl, \"stralloc\");\n  ASSERT_EQ(3, strlist_count(&sl));\n}\n\n/*\n * int strlist_push_unique_sa(strlist* sl, const stralloc* sa);\n */\nTEST(test_strlist_push_unique_sa) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n\n  strlist_init(&sl, '|');\n\n  ASSERT_EQ(0, strlist_count(&sl));\n  stralloc_copys(&sa, \"stralloc\");\n  strlist_push_unique_sa(&sl, &sa);\n  ASSERT_EQ(1, strlist_count(&sl));\n  strlist_push_unique_sa(&sl, &sa);\n  ASSERT_EQ(1, strlist_count(&sl));\n  stralloc_copys(&sa, \"strlist\");\n  strlist_push_unique_sa(&sl, &sa);\n  ASSERT_EQ(2, strlist_count(&sl));\n  stralloc_copys(&sa, \"str\");\n  strlist_push_unique_sa(&sl, &sa);\n  ASSERT_EQ(3, strlist_count(&sl));\n  stralloc_copys(&sa, \"stralloc\");\n  strlist_push_unique_sa(&sl, &sa);\n  ASSERT_EQ(3, strlist_count(&sl));\n}\n\n/*\n * int strlist_pushb(strlist* sl, const char* s, size_t n);\n */\nTEST(test_strlist_pushb) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n  strlist_init(&sl, '\\0');\n\n  strlist_pushb(&sl, \"bebe\", 4);\n  strlist_pushb(&sl, \"bebe\", 3);\n  strlist_pushb(&sl, \"bebe\", 2);\n  strlist_pushb(&sl, \"bebe\", 1);\n\n  strlist_joins(&sl, &sa, \"; \");\n  buffer_putsa(buffer_1, &sa);\n  buffer_putnlflush(buffer_1);\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"bebe; beb; be; b\"));\n}\n\n/*\n * int strlist_pushm_internal(strlist* sl, ...);\n */\nTEST(test_strlist_pushm) {\n  stralloc sa;\n  strlist sl;\n  stralloc_init(&sa);\n  strlist_init(&sl, '\\0');\n\n  strlist_pushm_internal(&sl, \"abcd\", \"abc\", \"ab\", \"a\", 0);\n\n  strlist_joins(&sl, &sa, \" | \");\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"abcd | abc | ab | a\"));\n}\n\n/*\n * strlist strlist_range(const strlist* sl, size_t from, size_t to);\n */\nTEST(test_strlist_range) {\n  stralloc sa;\n  strlist sl, r;\n  strlist_init(&sl, '\\0');\n  strlist_init(&r, '\\0');\n\n  strlist_pushm_internal(&sl, \"abcdefg\", \"abcdef\", \"abcde\", \"abcd\", \"abc\", \"ab\", \"a\", 0);\n\n  r = strlist_range(&sl, 2, 5);\n\n  ASSERT_EQ(3, strlist_count(&r));\n\n  stralloc_init(&sa);\n\n  strlist_joins(&r, &sa, \", \");\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"abcde, abcd, abc\"));\n}\n\n/*\n * int strlist_shift(strlist* sl, const char** strp);\n */\nTEST(test_strlist_shift) {\n  const char* s;\n  stralloc sa;\n  strlist sl;\n  strlist_init(&sl, ',');\n\n  strlist_push(&sl, \"water\");\n  strlist_push(&sl, \"soil\");\n  strlist_push(&sl, \"air\");\n  strlist_push(&sl, \"fire\");\n\n  stralloc_init(&sa);\n\n  strlist_joins(&sl, &sa, \", \");\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"water, soil, air, fire\"));\n\n  strlist_shift(&sl, &s);\n\n  stralloc_zero(&sa);\n  strlist_joins(&sl, &sa, \", \");\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"soil, air, fire\"));\n  ASSERT_EQ(0, !str_equal(s, \"water\"));\n\n  strlist_shift(&sl, &s);\n\n  stralloc_zero(&sa);\n  strlist_joins(&sl, &sa, \", \");\n\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"air, fire\"));\n  ASSERT_EQ(0, !str_equal(s, \"soil\"));\n}\n\n/*\n * int strlist_shift_n(strlist* sl, size_t i);\n */\nTEST(test_strlist_shift_n) {\n  const char* s;\n  stralloc sa;\n  strlist sl;\n  strlist_init(&sl, ',');\n\n  strlist_push(&sl, \"water\");\n  strlist_push(&sl, \"soil\");\n  strlist_push(&sl, \"air\");\n  strlist_push(&sl, \"fire\");\n\n  stralloc_init(&sa);\n\n  strlist_joins(&sl, &sa, \", \");\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"water, soil, air, fire\"));\n\n  strlist_shift_n(&sl, 2);\n\n  stralloc_zero(&sa);\n  strlist_joins(&sl, &sa, \", \");\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"air, fire\"));\n\n  strlist_shift_n(&sl, 1);\n\n  stralloc_zero(&sa);\n  strlist_joins(&sl, &sa, \", \");\n  ASSERT_EQ(0, !stralloc_equals(&sa, \"fire\"));\n}\n\n/*\n * size_t strlist_sort(strlist* sl);\n */\nTEST(test_strlist_sort) {\n  const char* s;\n  stralloc sa;\n  strlist sl;\n  strlist_init(&sl, ',');\n\n  strlist_push(&sl, \"water\");\n  strlist_push(&sl, \"soil\");\n  strlist_push(&sl, \"air\");\n  strlist_push(&sl, \"fire\");\n\n  strlist_sort(&sl);\n\n  stralloc_init(&sa);\n\n  strlist_joins(&sl, &sa, \", \");\n\n  buffer_puts(buffer_1, \"stralloc: \");\n  buffer_putsa(buffer_1, &sl.sa);\n  buffer_putnlflush(buffer_1);\n}\n\n/*\n * char* *strlist_to_argv(const strlist* sl);\n */\nTEST(test_strlist_to_argv) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n}\n\n/*\n * int strlist_unshift(strlist* sl, const char* s);\n */\nTEST(test_strlist_unshift) {\n  strlist sl;\n  strlist_init(&sl, '\\0');\n}\n\n#define RUN_STRLIST_TESTS()                                                                                            \\\n  RUN(test_strlist_at);                                                                                                \\\n  RUN(test_strlist_at_n);                                                                                              \\\n  RUN(test_strlist_at_sa);                                                                                             \\\n  RUN(test_strlist_cat);                                                                                               \\\n  RUN(test_strlist_contains);                                                                                          \\\n  RUN(test_strlist_contains_sa);                                                                                       \\\n  RUN(test_strlist_count);                                                                                             \\\n  RUN(test_strlist_dump);                                                                                              \\\n  RUN(test_strlist_froms);                                                                                             \\\n  RUN(test_strlist_index_of);                                                                                          \\\n  RUN(test_strlist_join);                                                                                              \\\n  RUN(test_strlist_joins);                                                                                             \\\n  RUN(test_strlist_push);                                                                                              \\\n  RUN(test_strlist_push_sa);                                                                                           \\\n  RUN(test_strlist_push_tokens);                                                                                       \\\n  RUN(test_strlist_push_unique);                                                                                       \\\n  RUN(test_strlist_push_unique_sa);                                                                                    \\\n  RUN(test_strlist_pushb);                                                                                             \\\n  RUN(test_strlist_pushm);                                                                                             \\\n  RUN(test_strlist_range);                                                                                             \\\n  RUN(test_strlist_shift);                                                                                             \\\n  RUN(test_strlist_shift_n);                                                                                           \\\n  RUN(test_strlist_sort);                                                                                              \\\n  RUN(test_strlist_to_argv);                                                                                           \\\n  RUN(test_strlist_unshift)\n\nTESTS(strlist) { RUN_STRLIST_TESTS(); }\n",
			"file": "tests/test_strlist.c",
			"file_size": 14223,
			"file_write_time": 131863385315673735,
			"settings":
			{
				"buffer_size": 14223,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_stralloc.c",
			"settings":
			{
				"buffer_size": 9563,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/all_tests.c",
			"settings":
			{
				"buffer_size": 97,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/unit_test.c",
			"settings":
			{
				"buffer_size": 6718,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/unit_test_runner.c",
			"settings":
			{
				"buffer_size": 266,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/unit_test.h",
			"settings":
			{
				"buffer_size": 8247,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 363.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"editor",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"reposit",
				"Preferences: Package Control Settings – User"
			],
			[
				"repo",
				"Package Control: Add Repository"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"repos",
				"Package Control: Add Repository"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"insta",
				"Package Control: Advanced Install Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Toggle"
			],
			[
				"Package Control: disc",
				"Package Control: Discover Packages"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"pac",
				"Package Control: Discover Packages"
			],
			[
				"ins",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Advanced Install Package"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"Remove",
				"Package Control: Remove Package"
			],
			[
				"make",
				"Makefile (dirlist): make all"
			],
			[
				"build",
				"Build: New Build System"
			],
			[
				"packa",
				"Package Control: Advanced Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 219.0,
		"history":
		[
			"clang_format",
			"Theme - Spacefunk, C++ Starting Kit",
			"schemr",
			"schemr_favorite_current_scheme",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/roman/Desktop/dirlist",
		"/C/Users/roman/Desktop/dirlist/tests"
	],
	"file_history":
	[
		"/C/Users/roman/Desktop/dirlist/lib/http/http_socket.c",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_sendreq.c",
		"/C/Users/roman/Desktop/dirlist/genmakefile.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_dirname.c",
		"/C/Users/roman/Desktop/dirlist/lib/path_internal.h",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_basename.c",
		"/D/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/Package Control.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_read.c",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_waituntil2.c",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_wantread.c",
		"/C/Users/roman/Desktop/dirlist/lib/process/process_create.c",
		"/C/Users/roman/Desktop/dirlist/lib/strarray/strarray_from_argv.c",
		"/C/Users/roman/Desktop/dirlist/lib/strarray/strarray_joins.c",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_to_argv.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_exists.c",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_froms.c",
		"/C/Users/roman/Desktop/dirlist/cc-wrap.c",
		"/C/Users/roman/Desktop/dirlist/compiler-wrapper.c",
		"/C/Users/roman/Desktop/dirlist/CMakeLists.txt",
		"/C/Users/roman/Desktop/dirlist/examples/io.c",
		"/C/Users/roman/Desktop/dirlist/examples/io5.c",
		"/C/Users/roman/Desktop/dirlist/lib/iarray/iarray_allocate.c",
		"/C/Users/roman/Desktop/dirlist/dirlist.sublime-project",
		"/C/Users/roman/Desktop/dirlist/examples/io2.c",
		"/C/Users/roman/Desktop/dirlist/examples/fmt_strm_alloca.c",
		"/C/Users/roman/Desktop/dirlist/elflist.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_begin.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_end.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_next.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_data.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_name.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf.h",
		"/C/Users/roman/Desktop/dirlist/omflist.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_close.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_open.c",
		"/C/Users/roman/Desktop/dirlist/lib/range.h",
		"/C/Users/roman/Desktop/dirlist/lib/pe/pe_get_datadir.c",
		"/C/Users/roman/Desktop/dirlist/list-r.c",
		"/C/Users/roman/Desktop/dirlist/pelist.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_next_record.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/Default (Windows).sublime-keymap",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/clang_format.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_relative.c",
		"/C/Users/roman/Desktop/dirlist/lib/stralloc/mmap_filename.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Cscope/CscopeSublime.sublime-settings",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Clang Format/clang_format.sublime-settings",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Clang Format/Default (Windows).sublime-keymap",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Clang Format/clang_format_custom.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/lib/pe.h",
		"/C/Program Files/IDM Computer Solutions/UEStudio/configs/Lcc win32 Compiler/Win32 Console Application",
		"/C/Users/roman/Desktop/dirlist/lib/pe/pe_thunk.c",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_push.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_canonicalize.c",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_push_tokens.c",
		"/C/Users/roman/Desktop/dirlist/lib/buffer/buffer_putulong.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/CTags.sublime-settings",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/CTags/Default.sublime-keymap",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/CTags/Default.sublime-mousemap",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_canonical.c",
		"/C/Users/roman/Desktop/dirlist/pathtool.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/CscopeSublime.sublime-settings",
		"/B/Programs/mplayer/mplayer/config",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/CTags/CTags.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_collapse.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Outline/outline.sublime-settings",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/outline.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/genmakefile/genmakefile.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_skip_separator.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_is_separator.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_skip.c",
		"/C/Users/roman/Desktop/dirlist/tests/CMakeLists.txt",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_is_absolute.c",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_push_unique.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_absolute_sa.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_fnmatch.c",
		"/C/Users/roman/Desktop/dirlist/SetMSVCStaticRuntime.cmake",
		"/C/Users/roman/Desktop/dirlist/lib/unit_test.h",
		"/C/Users/roman/Desktop/dirlist/lib/strlist/strlist_pop.c",
		"/C/Users/roman/Desktop/dirlist/lib/popen.c",
		"/C/Users/roman/Desktop/dirlist/lib/uint16.h",
		"/C/Users/roman/Desktop/dirlist/tests/test_strlist.c",
		"/C/Users/roman/Desktop/dirlist/tests/all_tests.c",
		"/C/Users/roman/Desktop/dirlist/tests/test_path.c",
		"/C/Users/roman/Desktop/dirlist/access.c",
		"/C/Users/roman/Desktop/dirlist/lib/uint64.h",
		"/C/Users/roman/Desktop/dirlist/lib/binfmt.h",
		"/C/Users/roman/Desktop/dirlist/lib/windoze.h",
		"/C/Users/roman/Desktop/unix.h",
		"/C/Users/roman/Desktop/dirlist/lib/typedefs.h",
		"/C/Users/roman/Desktop/dirlist/lib/socket.h",
		"/C/Users/roman/Desktop/dirlist/lib/socket_internal.h",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/CPrettify/user.cfg",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/CPrettify.sublime-settings",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/Package Control.sublime-settings",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_num_sa.c",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/CTags/CTags.sublime-settings",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/CTags.sublime-settings",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/CPrettify/CPrettify.sublime-settings",
		"/D/Qt/qt-5.10.1-static-ltcg-msvc2017-x86_64/mkspecs/win32-msvc/qmake.conf",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/User/Default (Windows).sublime-keymap",
		"/B/PortableApps/SublimeText3Portable/App/SublimeText64/Data/Packages/Schemr/Default (Windows).sublime-keymap",
		"/D/Sources/rsenn/dirlist/scripts/gen-a-deps.sh",
		"/D/Sources/rsenn/dirlist/rdir-test.c",
		"/D/Sources/rsenn/dirlist/lib/rdir.h",
		"/D/Sources/rsenn/dirlist/lib/rdir/rdir_close.c",
		"/D/Sources/rsenn/dirlist/lib/rdir/rdir_open.c",
		"/D/Sources/rsenn/dirlist/lib/rdir/rdir_read.c",
		"/D/Sources/rsenn/dirlist/lib/dir/dir_name.c",
		"/D/Sources/rsenn/dirlist/lib/dir/dir_type.c",
		"/D/Sources/rsenn/dirlist/dirlist.sublime-project",
		"/D/Sources/rsenn/dirlist/lib/utf8.c",
		"/D/Sources/rsenn/dirlist/lib/pe.h",
		"/D/Sources/rsenn/dirlist/elflist.c",
		"/D/Sources/rsenn/dirlist/elf64list.c",
		"/D/Sources/rsenn/dirlist/pelist.c",
		"/D/Sources/rsenn/dirlist/pathtool.c",
		"/B/Programs/polipo/config",
		"/D/Sources/rsenn/dirlist/mediathek-list.c",
		"/D/Sources/rsenn/dirlist/count-depth.c",
		"/D/Sources/rsenn/dirlist/decode-ls-lR.c",
		"/home/roman/.config/sublime-text-3/Packages/Schemr/Default (Linux).sublime-keymap",
		"/home/roman/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/roman/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/roman/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/roman/Sources/dirlist/lib/utf8.h",
		"/home/roman/Sources/dirlist/lib/dir/dir_name.c",
		"/home/roman/Sources/dirlist/lib/dir/dir_read.c"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"dmc",
			"\"cc\"",
			"path_prefix_s",
			"sourcedirs",
			"dump_sourcedirs",
			"rule_command",
			"#",
			"select(",
			"finds",
			"mswsock",
			"_WINSOCKAPI_",
			"mswsock",
			" stralloc",
			"add_srcpath",
			"get_includes",
			"base",
			"last_error_str",
			"gen_link_rules",
			"srcdir",
			"path_rela",
			"debug_sa(",
			"dmc",
			"LIBS\"",
			"$(LIBS)",
			"print_target_deps",
			"_IMPORT",
			"pe_export_directory",
			"strlist_ini",
			"-F",
			"-Fo",
			"-o\\\\",
			"e\\$",
			"e$",
			"o$",
			"-o",
			"AMD64",
			"X64",
			"86",
			"X86",
			"x86",
			"for_li",
			"gen_link",
			"delete_command",
			"set_compiler",
			"path_prefix_s",
			"libext",
			"get_inc",
			"extract_inc",
			"clean_rule",
			"wildcard",
			"realpath",
			"absolute",
			"\\",
			"equal",
			"-w",
			"link_rules",
			"data_dir",
			"shift+ctrl",
			"alt",
			"dir_INTERNAL(d)->tmpname",
			"size",
			"double",
			"float",
			"includedir",
			"\"as\"",
			"-P",
			"dump_str",
			"DUMP_LIST",
			"print_strl",
			"print_str",
			"warn",
			"err",
			"err_format",
			"debugger",
			"warn",
			"err",
			"process_option(",
			"Outdir",
			"pass1",
			"print_str",
			"++argi",
			"dump_stralloc",
			"strlist_push(",
			"debug",
			"-g",
			"\"ctrl+option+a\"",
			", ",
			"WARNINGS",
			"-W",
			"byte_",
			"thema",
			"\\",
			"pushsa",
			"md ",
			"mkdir",
			"cannot",
			"free",
			"zero",
			"mediat",
			"media",
			"mediathe",
			"get_until",
			"mediathe",
			"string_predicate",
			"mediathe",
			"std::string",
			"seconds",
			"64",
			"SOFTPWM",
			"number",
			"USE_HD44780_LCD",
			"TRISA",
			"RA",
			"def",
			"chipl",
			":65",
			"BUILDDIR",
			"-I",
			"CPPFLAGS",
			"-I",
			"to_amount",
			"led_enabled",
			"LED_PIN",
			"LED_",
			"UART_",
			"uart_",
			"#warning",
			"uart_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"last_error",
			"\\\\",
			"ctrl+shift",
			"ctrl",
			"d->tmpname",
			"space",
			"msg",
			"warn",
			"err_format",
			"msg",
			"warn",
			"argi++",
			"\"ctrl+alt+f\"",
			",\\n                ",
			",\\n     ",
			"t",
			"/",
			"init",
			"string",
			"dsecs",
			"SoftPWM",
			"USE_LCD",
			"TRISGP",
			"GP",
			"OBJDIR",
			"SER_",
			"ser_",
			"#advisory",
			"POSTSC",
			"TMR2",
			"TMR1",
			"INTERVAL",
			" SCALE",
			"volatile uint8 ",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"color_scheme": null,
							"current_file": "C:\\Users\\roman\\Desktop\\dirlist\\tests\\unit_test_runner.c",
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									158,
									163
								],
								[
									175,
									180
								],
								[
									191,
									196
								],
								[
									205,
									210
								]
							],
							"symlist":
							[
								"TESTS",
								"TESTS",
								"TESTS",
								"START"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "httptest.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2859,
						"regions":
						{
						},
						"selection":
						[
							[
								938,
								938
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "genmakefile.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56593,
						"regions":
						{
						},
						"selection":
						[
							[
								49022,
								49022
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 26398.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tests/test_strlist.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14223,
						"regions":
						{
						},
						"selection":
						[
							[
								11734,
								11613
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6275.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "tests/test_stralloc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9563,
						"regions":
						{
						},
						"selection":
						[
							[
								637,
								637
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 166.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tests/all_tests.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tests/unit_test.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6718,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "tests/unit_test_runner.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 266,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "tests/unit_test.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 8247,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C99/C99.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 35.968031968
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppBuilder":
	{
		"height": 209.0
	},
	"output.exec":
	{
		"height": 283.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "Make",
	"project": "dirlist.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"genma",
				"genmakefile.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 256.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
