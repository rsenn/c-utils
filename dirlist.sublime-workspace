{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"range",
				"range"
			],
			[
				"USE_",
				"USE_HD44780_LCD"
			]
		]
	},
	"buffers":
	[
		{
			"file": "xmlpp.c",
			"settings":
			{
				"buffer_size": 3457,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "jsonpp.c",
			"settings":
			{
				"buffer_size": 3754,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xml2json.c",
			"settings":
			{
				"buffer_size": 3202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/hmap/hmap_delete.c",
			"settings":
			{
				"buffer_size": 1102,
				"line_ending": "Unix"
			}
		},
		{
			"file": "genmakefile.c",
			"settings":
			{
				"buffer_size": 91583,
				"line_ending": "Unix"
			}
		},
		{
			"file": "httptest.c",
			"settings":
			{
				"buffer_size": 3119,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n\n\n  Contignuous containers:\n\n      lib/range.h          tuple {start,end,size} a pointer range with item size in bytes\n      lib/strarray.h       an array of pointer to string, string always '\\0' terminated, vector always NULL terminated\n      lib/strlist.h        character separated list (\\0 \\n , ...) in a stralloc\n\n\n  Linked list containers:\n\n      lib/slist.h          single ended queue (head) singly linked (next) list container.\n                           mutable traversal using node** x = &head\n                           iteration with node* p = head\n\n      lib/list.h           double ended queue (head,tail) using double linked lists (prev,next)\n                           with list traversal macros list_foreach,*_safe,*_reverse\n\n  Assiociative and hierarchical containers:\n\n      lib/hmap.h           hash map container with ownership on property of built-in type or custom *ptr,struct_size\n      lib/hashmap.h        associative map container using hashed bucket algorithms\n      lib/cb.h             crit-bit trees\n      lib/cbmap.h          an associative map container based on crit-bittrees\n      lib/map.h\n\n\n\n      lib/http.h           HTTP client model with requests, responses and headers, compression chains async reading via iopause\n      lib/charbuf.h        an 1-byte character buffer\n\n\n  Serialization / Data formats:\n\n      lib/json.h           JSON callback and tree parsers, tree iteration, token output\n      lib/xml.h            XML read with callback, set of functions for building element and attribute lists\n      lib/playlist.h       Read/write Playlist generic playlist abstraction\n\n   Word expand, exec and wait process\n\n      lib/expand.h         shell word expansion of ${vars}, special params and backticks command into string list\n      lib/process.h        exec and wait for processes\n      lib/wait.h           wait/waitpid from djb\n      lib/sig.h            sig action/block from djb\n\n\n      lib/var.h            Lexically ordered NAME=VALUE pairs with attributes (exported, local, readonly, ...)\n      lib/vartab.h         Table for variable lookup stacked for subshell context\n\n\n  Dumb charset conversion UCS, UTF-8, Latin 1\n\n      lib/ucs.h\n\n\n  Periphery / Sensing\n\n      lib/gpio.h           Memory map Raspberry Pi GPIO pins, provide tri-state digital i/o\n\n\n  Base function from fefe libowfat:\n\n        array    dns      open     taia\n        buffer   examples scan     test\n        byte     fmt      socket   textcode\n        case     io       str      uint\n        cdb      mmap     stralloc unix\n        critbit  mult     tai\n\n\n      lib/array.h          allocated byte vector item indexing with umult64\n      lib/buffer.h         buffered standard input/output/error. op is pointer to a read/write(fd,buf,len) = num_bytes\n      lib/byte.h           operations on fixed length byte ranges\n      lib/case.h           case-insensitive versions of str comparision functions from fefe libowfat\n      lib/dns.h            djbdns client api\n      lib/fmt.h            formatted output into byte buffer functions\n      lib/io.h             libfefe I/O muxing for unix and windows\n      lib/alloc.h          alloc, alloc_re, alloc_free djb interface\n\n      lib/iarray.h         array of integers container\n      lib/fmt.h            formatted output into byte buffer functions\n      lib/io.h             libfefe I/O muxing for unix and windows\n      lib/dns.h            djbdns client api\n      lib/errmsg.h         fefe libowfat\n\n\n\n\n\n  Command line (CLI) utilities:\n\n      pkgcfg.c             Drop-in pkg-config, prints compile and link flags for package\n      impgen.c             Generate a .DEF file from a .DLL library\n\n      ar-wrap.c            generic cross-compiler wrapper for the archiver (lib bundler)\n      cc-wrap.c            generic cross-compiler wrapper for the front (preprocessor, compiler, assembler)\n      compiler-wrapper.c   A compiler driver for Microchip PIC toolchains (picc,picc18,xc8,sdcc)\n      cmake-run.c          find cross environment using dir and path functions and pass it to CMake\n\n      genmakefile.c        Makefile / Ninja generator based on\n\n                                *.c *.h          files\n                                .                directories\n\n                                CC, CFLAGS       compiler, flags\n\n                                AR, ARFLAGS      librarian\n                                LINK, LDFLAGS    linker, flags\n\n                                -L and -l        add library\n                                -I and -D        add include/definition\n\n\n      ntldd.c              recurse dynamic bindings of .exe files like /usr/bin/ldd on Linux\n      pelist.c             List .EXE and .DLL file sections, import tables and export directories\n      omflist.c            List OMF object files symbols\n      cofflist.c           List COFF object files symbols\n      elflist.c            List Elf32 headers, sections, segments, symbols and dynamic section\n      elf64list.c          List Elf64 headers, sections, segments, symbols and dynamic section\n      macho32list.c        List Mach-O segments and symbol table\n\n\n  Compression and integrity\n\n      ccat.c               Compressed file cat with getopt() options and error reporting\n      crc32.c              Calculate crc32 checksum, using zlib or diet version\n\n\n  Network utilities\n\n      dnsip.c              Resolve hostname into IP addresses (NS from resolv.conf or DNSCACHE environment variable)\n      dnsname.c            Reverse lookup of IP address\n      tcping.c             try to TCP connect and output time of each acknowledge or reset\n\n\n  Binary file tools\n\n      bsdiffcat.c          Translates a binary diff made with bsdiff into patch(buf, offset, ifval, thenval) calls\n      hexedit.c            Memory map a file and process a set of patch data in the form: ADDRESS IF-BYTE SET-BYTE\n      torrent-progress.c   memory map incomplete torrent data calculate percentage of pages which are all zero-bytes\n\n\n  Media and streams\n\n      mediathek-list.c     HTTP load and filter mediathek-filme.json of the MediathekView application\n      mediathek-parser.c   Parse a mediathek-filme.json store and generate a Playlist from it\n\n  Windows registry\n\n      reg2cmd.c            Convert a windows registry .REG file into a .BAT with REG ADD commands\n      regfilter.c          zombie copy reg2cmd, was intended a filtering version, like grepdiff\n\n\n  Path helpers\n\n      pathtool.c           dropin for realpath, with --relative-to DIR feature and windows/msys support cygpath compliant\n      sln.c                for a /usr/lib/libX.so.major.minor file pass one or more link names: libX.so.major libX.so /lib/libX.so\n      msys-shell.c         Registry & path search for msys/msys2 environments and launch mintty and bash inside\n\n  Utilities reading/writing XML/JSON\n\n      opensearch-dump.c    parse an OpenSearch XML file into an URL /search?query=%s to have them in Firefox/Chrome\n      plsconv.c            Convert playlists between the formats .M3U .PLS .XSPF\n\n      xmlpp.c              pretty-print XML/XHML\n      jsonpp.c             Pretty-print JSON data\n      xml2json.c           convert an element tree into json objects { tagName, ...attributes, children: [ ..innerElements\n      xml2moon.c           convert XHTML content into lapis html generator syntax: element prop: val, prop2: ..\n\n      eagle-gen-cmds.c     Read EAGLE XML schematics/layouts and generate commands to draw contour and x/y axis measures\n      eagle-init-brd.c     Generate component arrangement congruent with Schematic and generate translate and rotate commands\n      eagle-to-circuit.c   Read EAGLE XML packages and netlists, write .circuit file for striprouter\n\n\n  Basic usage examples or boilerplates:\n\n      binfmttest.c         Test binary format readers\n      buffertest.c         Test I/O buffer system, chaining with zlib/bzip2/lzma filter\n      dnstest.c            Test DNS resolver\n      httptest.c           Test HTTP client\n      jsontest.c           Test JSON parser\n      strarraytest.c       Test array of char* pointer functions\n      xmltest.c            Test XML reading with callbacks (diet version of SAX)\n      xmltest2.c           Test XML reading as tree (diet version of DOM)\n      xmltest3.c           Test XML traversal and selection (diet version of getElementBy* and XPath)\n      xmltest4.c           Test XML query\n      ziptest.c            Simple universal file compression of *.gz, *.bz2, *.xz based on file extension\n\n\n",
			"file": "README.txt",
			"file_size": 8521,
			"file_write_time": 131994740586651878,
			"settings":
			{
				"buffer_size": 8520,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nGitHub Markdown Snippets\n------------------------\n\n  ☀☀☀☀☀☀ Thanks for Github Markdown Snippets! (✿✪‿✪｡)ﾉ ☀☀☀☀☀☀☀\n  ✿ To report bugs and request features - https://github.com/praveenpuglia/github_markdown_snippets\n  \n  〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜\n  Usage\n  〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜\n  A consolidated guide is available at - http://praveenpuglia.github.io/github_markdown_snippets \n  \n  Type a tag name and hit tab. That's it! ｡◕‿◕｡\n  \n  ✿ Long tags like `blockquote` are shortened for power use.\n  \n  〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜\n  List of Tab Triggers\n  〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜\n  h1              // Heading 1\n  h2              // Heading 2\n  h3              // Heading 3\n  h4              // Heading 4\n  h5              // Heading 5\n  h6              // Heading 6\n  b               // Bold\n  i               // Italic\n  bq              // Blockquote\n  strike          // Strikeout\n  hr              // Horizontal Rule, Divider\n  code            // Inline Code\n  pre             // Code Block with language based highlighting.\n  a               // Anchor\n  img             // Image\n  ol              // Ordered List\n  ul              // Unordered List\n  table           // Table\n",
			"settings":
			{
				"buffer_size": 1335,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "Make",
	"build_system_choices":
	[
		[
			[
				[
					"List",
					""
				],
				[
					"Make",
					""
				],
				[
					"Make clean",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/C99/C99.sublime-build",
					""
				],
				[
					"Packages/C99/C99.sublime-build",
					"Run"
				]
			],
			[
				"Make",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 363.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"open",
				"File Navigator: Open"
			],
			[
				"find file",
				"Find Elements in Folder…"
			],
			[
				"find",
				"Find Elements in Folder…"
			],
			[
				"instlal pac",
				"Package Control: Advanced Install Package"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"schemed",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"Package Control: sear",
				"Package Control: Discover Packages"
			],
			[
				"packa",
				"Package Control: Discover Packages"
			],
			[
				"edit",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"instal",
				"Package Control: Advanced Install Package"
			],
			[
				"insta",
				"Package Control: Advanced Install Package"
			],
			[
				"scheme",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"Package Control: install",
				"Package Control: Advanced Install Package"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"Package Control: adv",
				"Package Control: Advanced Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: adva",
				"Package Control: Advanced Install Package"
			],
			[
				"editor",
				"SchemeEditor: Edit Current Scheme"
			],
			[
				"reposit",
				"Preferences: Package Control Settings – User"
			],
			[
				"repo",
				"Package Control: Add Repository"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"repos",
				"Package Control: Add Repository"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Toggle"
			],
			[
				"Package Control: disc",
				"Package Control: Discover Packages"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"pac",
				"Package Control: Discover Packages"
			],
			[
				"ins",
				"Package Control: Advanced Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Advanced Install Package"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"Remove",
				"Package Control: Remove Package"
			],
			[
				"make",
				"Makefile (dirlist): make all"
			],
			[
				"build",
				"Build: New Build System"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 219.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.log_commands(True);",
			" sublime.log_commands(True);",
			" sublime.log_commands(True)",
			"Outline",
			"clang_format",
			"Theme - Spacefunk, C++ Starting Kit",
			"schemr",
			"schemr_favorite_current_scheme",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Sources/dirlist",
		"/home/roman/Sources/dirlist/lib",
		"/home/roman/Sources/dirlist/lib/alloc",
		"/home/roman/Sources/dirlist/lib/cbmap",
		"/home/roman/Sources/dirlist/lib/fmt",
		"/home/roman/Sources/dirlist/lib/hmap",
		"/home/roman/Sources/dirlist/lib/http",
		"/home/roman/Sources/dirlist/lib/json",
		"/home/roman/Sources/dirlist/lib/slist"
	],
	"file_history":
	[
		"/home/roman/Sources/dirlist/README.md",
		"/home/roman/Sources/dirlist/lib/xml/xml_print_attributes.c",
		"/home/roman/Sources/dirlist/lib/hmap.h",
		"/home/roman/Sources/dirlist/lib/json/json_print.c",
		"/home/roman/Sources/dirlist/jsonpp.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_set_chars.c",
		"/home/roman/Sources/dirlist/lib/json.h",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_set.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_add.c",
		"/home/roman/Sources/dirlist/genmakefile.c",
		"/home/roman/Sources/dirlist/lib/json/json_push.c",
		"/home/roman/Sources/dirlist/lib/slist.h",
		"/home/roman/Sources/dirlist/xml2json.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_get.c",
		"/home/roman/Sources/dirlist/lib/json/json_set_property.c",
		"/home/roman/Sources/dirlist/lib/json/json_tostring.c",
		"/home/roman/Sources/dirlist/lib/fmt/fmt_double.c",
		"/home/roman/Sources/dirlist/lib/json/json_recurse.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_set_stralloc.c",
		"/home/roman/Sources/dirlist/lib/json/json_toint.c",
		"/home/roman/Sources/dirlist/lib/json/json_parse.c",
		"/home/roman/Sources/dirlist/lib/fmt.h",
		"/home/roman/Sources/dirlist/lib/json/json_newnode.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_size.c",
		"/home/roman/Sources/dirlist/lib/hashmap/hashmap_init.c",
		"/home/roman/Sources/dirlist/lib/json/json_get_property.c",
		"/home/roman/Sources/dirlist/lib/json/json_length.c",
		"/home/roman/Sources/dirlist/lib/hmap/hmap_init.c",
		"/home/roman/Sources/dirlist/lib/json/json_tosa.c",
		"/home/roman/Sources/dirlist/lib/json/json_todouble.c",
		"/home/roman/Sources/dirlist/lib/json/json_free.c",
		"/home/roman/Sources/dirlist/lib/cbmap.h",
		"/home/roman/Sources/dirlist/lib/json/json_read_tree.c",
		"/home/roman/Sources/dirlist/lib/cbmap/cbmap_get.c",
		"/home/roman/Sources/dirlist/lib/cbmap/cbmap_insert.c",
		"/home/roman/Sources/dirlist/lib/alloc/alloc_zero.c",
		"/home/roman/Sources/dirlist/lib/alloc/alloc_re.c",
		"/home/roman/Sources/dirlist/lib/json/json_read_callback.c",
		"/home/roman/Sources/dirlist/xmlpp.c",
		"/home/roman/Sources/dirlist/tcping.c",
		"/home/roman/Sources/dirlist/pelist.c",
		"/home/roman/Sources/dirlist/lib/alloc/alloc.c",
		"/home/roman/Sources/dirlist/lib/json/json_reader_init.c",
		"/home/roman/Sources/dirlist/lib/likely.h",
		"/home/roman/Sources/dirlist/lib/stralloc.h",
		"/home/roman/Sources/dirlist/lib/buffer/buffer_put.c",
		"/home/roman/Sources/dirlist/lib/buffer/buffer_stubborn.c",
		"/home/roman/Sources/dirlist/lib/buffer/buffer_frombuf.c",
		"/home/roman/Sources/dirlist/lib/fmt/fmt_escapecharjson.c",
		"/home/roman/Sources/dirlist/lib/byte.h",
		"/home/roman/Sources/dirlist/lib/stralloc/stralloc_write.c",
		"/home/roman/Sources/dirlist/lib/buffer/buffer_fromsa.c",
		"/home/roman/Sources/dirlist/lib/buffer/buffer_putnc.c",
		"/home/roman/Sources/dirlist/lib/buffer.h",
		"/home/roman/Sources/dirlist/lib/stralloc/stralloc_fmt_call.c",
		"/home/roman/Sources/dirlist/Makefile.functions",
		"/home/roman/Sources/dirlist/jsontest.c",
		"/home/roman/Sources/dirlist/lib/charbuf/charbuf_peek.c",
		"/home/roman/Sources/dirlist/lib/charbuf.h",
		"/home/roman/Sources/dirlist/lib/charbuf/charbuf_skip.c",
		"/home/roman/Sources/dirlist/lib/slist/slist_add_after.c",
		"/home/roman/Sources/dirlist/dirlist.sublime-project",
		"/home/roman/.config/sublime-text-3/Packages/Open-Include/Open-Include.sublime-settings",
		"/home/roman/.config/sublime-text-3/Packages/User/Open-Include.sublime-settings",
		"/home/roman/.config/sublime-text-3/Packages/Open-Include/Default (Linux).sublime-keymap",
		"/home/roman/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/roman/Sources/dirlist/lib/slist/slist_add_before.c",
		"/home/roman/.config/sublime-text-3/Packages/Conditional ColorSchemes/Example.sublime-settings",
		"/home/roman/.config/sublime-text-3/Packages/User/ConditionalColorSchemes.sublime-settings",
		"/home/roman/Sources/dirlist/lib/unix/fnmatch_b.c",
		"/home/roman/Sources/rsenn/dirlist/genmakefile.c",
		"/home/roman/Sources/rsenn/dirlist/mediathek-list.c",
		"/home/roman/Sources/rsenn/dirlist/dirlist.sublime-project",
		"/C/Users/roman/Desktop/dirlist/mediathek-list.c",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_waituntil.c",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_waituntil2.c",
		"/C/Users/roman/Desktop/dirlist/lib/io.h",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_timeouted.c",
		"/C/Users/roman/Desktop/dirlist/hexedit.c",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_read.c",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_get.c",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_writeable.c",
		"/C/Users/roman/Desktop/dirlist/httptest.c",
		"/C/Users/roman/Desktop/dirlist/lib/http/http_socket.c",
		"/C/Users/roman/Desktop/dirlist/lib/stralloc/mmap_filename.c",
		"/C/Users/roman/Desktop/dirlist/torrent-progress.c",
		"/C/Users/roman/Desktop/dirlist/crc32.c",
		"/C/Users/roman/Desktop/dirlist/lib/buffer/buffer_mmapread.c",
		"/C/Users/roman/Desktop/dirlist/lib/range.h",
		"/C/Users/roman/Desktop/dirlist/lib/mmap.h",
		"/C/Users/roman/Desktop/dirlist/lib/io/io_close.c",
		"/C/Users/roman/Desktop/dirlist/tcping.c",
		"/C/Users/roman/Desktop/dirlist/lib/elf.h",
		"/C/Users/roman/Desktop/dirlist/lib/rangecheck.h",
		"/C/Users/roman/Desktop/dirlist/elflist.c",
		"/C/Users/roman/Desktop/dirlist/hexedit.vcxproj",
		"/C/Users/roman/Desktop/dirlist/lib/buffer/buffer_mmapread_fd.c",
		"/C/Users/roman/Desktop/dirlist/examples/uudecode.c",
		"/C/Users/roman/Desktop/dirlist/genmakefile.c",
		"/C/Users/roman/Desktop/dirlist/lib/path/path_dirname.c",
		"/C/Users/roman/Desktop/dirlist/msys32.sublime-build",
		"/C/Users/roman/Desktop/dirlist/dirlist.sublime-project",
		"/C/Users/roman/Desktop/dirlist/mediathek-parser.c",
		"/C/Users/roman/Desktop/dirlist/pathtool.c",
		"/C/Users/roman/Desktop/dirlist/lib/coff/coff_sclass_name.c",
		"/C/Users/roman/Desktop/dirlist/lib/coff/coff_line_numbers.c",
		"/C/Users/roman/Desktop/dirlist/lib/coff/coff_index_symtab.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/roman/Desktop/msys32-path.cmd",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Schemr/Default (Windows).sublime-keymap",
		"/C/Users/roman/Desktop/dirlist/omflist.c",
		"/C/Users/roman/Desktop/dirlist/stream_flags_en",
		"/C/Users/roman/Desktop/dirlist/stream_flags_co",
		"/C/Users/roman/Desktop/dirlist/stream_encoder_",
		"/C/Users/roman/Desktop/dirlist/stream_encoder.",
		"/C/Users/roman/Desktop/dirlist/lib/omf.h",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_data.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_record_begin.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_record_end.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_record_next.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_name.c",
		"/C/Users/roman/Desktop/dirlist/lib/typedefs.h",
		"/C/Users/roman/Desktop/dirlist/lib/pe.h",
		"/C/Users/roman/Desktop/dirlist/lib/coff.h",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_get_name.c",
		"/C/Users/roman/Desktop/dirlist/lib/omf/omf_begin.c",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/User/outline.sublime-settings",
		"/B/PortableApps/SublimeTextPortable/App/SublimeText64/Data/Packages/Outline/outline.sublime-settings"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			"/home/roman/Sources/dirlist/lib",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"dup_fla",
			"children",
			"each",
			"push",
			"val_chars",
			"LIB_JSON_H_",
			"val->",
			"cbmap_visit",
			"printer.",
			"p->",
			"&printer",
			"printer.",
			"buffer_puts(buffer_2, \"json_print_separator(\");\n",
			"printer.",
			"int))",
			"depth)",
			"separator",
			"max_depth",
			"printer.",
			"p->spacing",
			"p->separator",
			"p->indent",
			"p->newline",
			"stralloc_write",
			"predi",
			"json.h",
			"slink_next",
			".txt",
			".dep",
			"function",
			"popen",
			"new_patch",
			"patch",
			"dynstr",
			"get_symtab_r",
			"ELF_GET",
			"dump_dyn",
			"_inline",
			"newline =",
			"\"\\n\\t",
			"\"g\"",
			"rule_command",
			"gen_comp",
			"get_rule_sa",
			"gen_compile",
			"gen_compile_rules",
			"popul",
			"prepend",
			"output_make_rule",
			"output_all",
			"rule(",
			"hmap_foreach",
			"sourcedirs",
			"gen_compile_rules",
			"sourcedir;",
			"srcdir->",
			"sourcefile;",
			"rule_command",
			"put_newline",
			"set_var",
			"put_newline",
			"output_",
			"output",
			"_rule(",
			"var(",
			"get_var",
			"set_var(",
			"set_compiler_typ",
			"set_com",
			"set_compile",
			"get_rule_sa",
			"get_rule_sa(&wo",
			"rule = get_rule_sa",
			"pathsep_args =",
			"buffer_1",
			"main(",
			"\"\\n ",
			"make_begin_inline",
			"\n ",
			"data.start",
			"recptr",
			"occ",
			"make_rule",
			"all_rules(",
			"deps(",
			"sclass",
			"name",
			"subst_var",
			"varname",
			"output_ninja",
			"output_make_rule",
			"output_rule(",
			"subst_var",
			"rule_command",
			"atch;",
			"TRUE",
			"print_target",
			"putnlflush",
			"find_rule_b",
			"all =",
			"output_rule",
			"set_make_type",
			"dmc",
			"\"cc\"",
			"path_prefix_s",
			"sourcedirs",
			"dump_sourcedirs",
			"rule_command",
			"#",
			"select(",
			"finds",
			"mswsock",
			"_WINSOCKAPI_",
			"mswsock",
			" stralloc",
			"add_srcpath",
			"get_includes",
			"base",
			"last_error_str",
			"gen_link_rules",
			"srcdir",
			"path_rela",
			"debug_sa(",
			"dmc",
			"LIBS\"",
			"$(LIBS)",
			"print_target_deps",
			"_IMPORT"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"JSON_H",
			"val.",
			"fmt->",
			"printer.",
			"fmt",
			"fmt->",
			"p->",
			"int, int))",
			"depth, index)",
			"depth",
			"p->",
			"printer.spacing",
			"printer.separator",
			"printer.indent",
			"printer.newline",
			"p",
			"r",
			"path",
			"v",
			"",
			"last_error",
			"\\\\",
			"ctrl+shift",
			"ctrl",
			"d->tmpname",
			"space",
			"msg",
			"warn",
			"err_format",
			"msg",
			"warn",
			"argi++",
			"\"ctrl+alt+f\"",
			",\\n                ",
			",\\n     ",
			"t",
			"/",
			"init",
			"string",
			"dsecs",
			"SoftPWM",
			"USE_LCD",
			"TRISGP",
			"GP",
			"OBJDIR",
			"SER_",
			"ser_",
			"#advisory",
			"POSTSC",
			"TMR2",
			"TMR1",
			"INTERVAL",
			" SCALE",
			"volatile uint8 ",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "xmlpp.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3457,
						"regions":
						{
						},
						"selection":
						[
							[
								2629,
								2629
							]
						],
						"settings":
						{
							"SL.170.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1073.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "jsonpp.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3754,
						"regions":
						{
						},
						"selection":
						[
							[
								1736,
								1736
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 481.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "xml2json.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3202,
						"regions":
						{
						},
						"selection":
						[
							[
								2932,
								2932
							]
						],
						"settings":
						{
							"SL.172.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"origin_encoding": "ASCII",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1154.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/hmap/hmap_delete.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1102,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"origin_encoding": "ASCII",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "genmakefile.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 91583,
						"regions":
						{
						},
						"selection":
						[
							[
								77926,
								77926
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 41724.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "httptest.c",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3119,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "README.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8520,
						"regions":
						{
						},
						"selection":
						[
							[
								8520,
								8520
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2223.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1335,
						"regions":
						{
						},
						"selection":
						[
							[
								1335,
								1335
							]
						],
						"settings":
						{
							"auto_indent": false,
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppBuilder":
	{
		"height": 209.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 283.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "Make",
	"project": "dirlist.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"lib\\omf.h"
			],
			[
				"genma",
				"genmakefile.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 348.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
